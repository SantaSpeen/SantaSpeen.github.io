{"config":{"indexing":"full","lang":["ru"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Anixart API wrapper \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0412\u0440\u0430\u043f\u043f\u0435\u0440 \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f anixart API, \u043d\u0430\u0438\u043b\u0443\u0447\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0430\u043d\u0438\u043c\u0435 \u043d\u0430 \u0442\u0435\u0440\u0440\u0438\u0442\u043e\u0440\u0438\u0438 \u0441\u0442\u0440\u0430\u043d \u0421\u041d\u0413. \u041e\u0442 \u0441\u0435\u0431\u044f \u043c\u043e\u0433\u0443 \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0430 \u043b\u0438\u0448\u044c \u0434\u043b\u044f \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u043b\u0435\u043d\u0438\u044f. \u041d\u0435 \u0441\u043e\u0432\u0435\u0442\u0443\u044e \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u043a\u0438\u043c\u0438\u043c \u0432\u0435\u0449\u0430\u043c\u0438 \u043a\u0430\u043a \u043d\u0430\u043a\u0440\u0443\u0442\u043a\u0430 \u043b\u0430\u0439\u043a\u043e\u0432, \u0438\u043c\u0435\u0439\u0442\u0435 \u0443\u0432\u0430\u0436\u0435\u043d\u0438\u0435 \u043a \u043f\u0440\u043e\u0435\u043a\u0442\u0443. \u0415\u0441\u043b\u0438 \u043f\u043e\u0441\u0442\u0443\u043f\u044f\u0442 \u0436\u0430\u043b\u043e\u0431\u044b \u043e\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u0442\u043e \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044e \u0431\u0443\u0434\u0435\u0442 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d. C\u043e\u0441\u0442\u0430\u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438: \u041e\u0431\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u0411\u044b\u0441\u0442\u0440\u043e\u0435 \u043d\u0430\u0447\u0430\u043b\u043e \u041f\u0440\u0438\u043c\u0435\u0440\u044b API \u041c\u0435\u0442\u043a\u0438 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u041c\u0435\u0442\u043e\u0434\u044b CHANGELOG","title":"\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435"},{"location":"#anixart-api-wrapper","text":"","title":"Anixart API wrapper"},{"location":"#_1","text":"\u0412\u0440\u0430\u043f\u043f\u0435\u0440 \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f anixart API, \u043d\u0430\u0438\u043b\u0443\u0447\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0430\u043d\u0438\u043c\u0435 \u043d\u0430 \u0442\u0435\u0440\u0440\u0438\u0442\u043e\u0440\u0438\u0438 \u0441\u0442\u0440\u0430\u043d \u0421\u041d\u0413. \u041e\u0442 \u0441\u0435\u0431\u044f \u043c\u043e\u0433\u0443 \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0430 \u043b\u0438\u0448\u044c \u0434\u043b\u044f \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u043b\u0435\u043d\u0438\u044f. \u041d\u0435 \u0441\u043e\u0432\u0435\u0442\u0443\u044e \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u043a\u0438\u043c\u0438\u043c \u0432\u0435\u0449\u0430\u043c\u0438 \u043a\u0430\u043a \u043d\u0430\u043a\u0440\u0443\u0442\u043a\u0430 \u043b\u0430\u0439\u043a\u043e\u0432, \u0438\u043c\u0435\u0439\u0442\u0435 \u0443\u0432\u0430\u0436\u0435\u043d\u0438\u0435 \u043a \u043f\u0440\u043e\u0435\u043a\u0442\u0443. \u0415\u0441\u043b\u0438 \u043f\u043e\u0441\u0442\u0443\u043f\u044f\u0442 \u0436\u0430\u043b\u043e\u0431\u044b \u043e\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u0442\u043e \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044e \u0431\u0443\u0434\u0435\u0442 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d.","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435"},{"location":"#c","text":"\u041e\u0431\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u0411\u044b\u0441\u0442\u0440\u043e\u0435 \u043d\u0430\u0447\u0430\u043b\u043e \u041f\u0440\u0438\u043c\u0435\u0440\u044b API \u041c\u0435\u0442\u043a\u0438 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u041c\u0435\u0442\u043e\u0434\u044b CHANGELOG","title":"C\u043e\u0441\u0442\u0430\u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438:"},{"location":"CHANGELOG/","text":"CHANGELOG TODOs \u0414\u043e \u043a\u043e\u043d\u0446\u0430 \u0438\u0437\u0443\u0447\u0438\u0442\u044c Anixart API. \u0414\u043e\u0434\u0435\u043b\u0430\u0442\u044c \u0440\u0430\u0437\u0434\u0435\u043b API Anixart \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438. Anixart API Wrapper 24.01.2022 Version: 0.3.5.1, Build: 570 \u0420\u0435\u043b\u0438\u0437 \u0431\u044b\u043b \u0432\u044b\u043f\u0443\u0449\u0435\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u0432 pypitest pip install -i https://test.pypi.org/simple/ anixart==0.3.5.1 \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0438\u0437 \u0438\u0441\u0445\u043e\u0434\u043d\u0438\u043a\u043e\u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432\u0435\u0440\u0441\u0438\u0438 22.01.2022 Version: 0.3.5, Build: 568 \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043a\u043b\u0430\u0441\u0441 anix.profile.blocklist \u0441 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438: get add remove \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043a\u043b\u0430\u0441\u0441 anix.profile.list \u0441 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438: get \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043a\u043b\u0430\u0441\u0441 anix.coll.favorite \u0441 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438: get add delete \u0412 \u043a\u043b\u0430\u0441\u0441\u0435 anix.other \u0431\u044b\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u043c\u0435\u0442\u043e\u0434\u044b: history toggles \u041c\u0435\u0442\u043e\u0434 anix.profile.blocklist() \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0451\u043d \u0432 \u043a\u043b\u0430\u0441\u0441 anix.profile.blocklist \u0438 \u0442\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f anix.profile.bl.get(page) . \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 @property . \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d logger , \u0432\u044b\u0432\u043e\u0434\u0438\u0442 DEBUG \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e. 21.01.2022 Version: 0.3.4, Build: 519 \u041f\u0435\u0440\u0435\u043d\u0451\u0441 \u0441\u0435\u0441\u0441\u0438\u044e \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0432 AnixUserAccount . \u0411\u044b\u043b \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u0438\u0437\u0443\u0447\u0435\u043d Anixart API. \u0411\u044b\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b. \u041c\u0435\u0442\u043e\u0434 anix.other.voice() \u0431\u044b\u043b \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043d\u0430 anix.other.type() . 20.01.2022 Version: 0.3.3.1, Build: 509 \u0418\u0441\u043f\u0440\u0430\u0432\u0438\u043b \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u0430 EDIT_AVATAR \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u043a\u043e\u0434\u0430\u043c\u0438 \u043e\u0448\u0438\u0431\u043e\u043a. Version: 0.3.3, Build: 501 \u0411\u044b\u043b \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043a\u043b\u0430\u0441\u0441 Release, \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u0442\u0443\u0442 \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0438\u043c\u043f\u043e\u0440\u0442\u044b \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f Anixart API Wrapper Docs 21.01.2022 Version: 0.9.2 \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u0440\u0430\u0437\u0434\u0435\u043b API Anixart API Anixart: \u041e\u043f\u0438\u0441\u0430\u043d Auth \u0427\u0430\u0441\u0442\u0438\u0447\u043d\u043e \u043e\u043f\u0438\u0441\u0430\u043d Profile \u041e\u043f\u0438\u0441\u0430\u043d Other 20.01.2022 Version: 0.9.1 \u041f\u0435\u0440\u0435\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u0430 \u043f\u043e\u0434\u0430\u0447\u0430 \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u0440\u0430\u0437\u0434\u0435\u043b\u044b \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d CHANGELOG Version: 0.9.0 \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0430 \u041e\u043f\u0438\u0441\u0430\u043d\u044b \u0432\u0441\u0435 \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b","title":"CHANGELOG"},{"location":"CHANGELOG/#changelog","text":"","title":"CHANGELOG"},{"location":"CHANGELOG/#todos","text":"\u0414\u043e \u043a\u043e\u043d\u0446\u0430 \u0438\u0437\u0443\u0447\u0438\u0442\u044c Anixart API. \u0414\u043e\u0434\u0435\u043b\u0430\u0442\u044c \u0440\u0430\u0437\u0434\u0435\u043b API Anixart \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438.","title":"TODOs"},{"location":"CHANGELOG/#anixart-api-wrapper","text":"","title":"Anixart API Wrapper"},{"location":"CHANGELOG/#24012022","text":"","title":"24.01.2022"},{"location":"CHANGELOG/#version-0351-build-570","text":"\u0420\u0435\u043b\u0438\u0437 \u0431\u044b\u043b \u0432\u044b\u043f\u0443\u0449\u0435\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u0432 pypitest pip install -i https://test.pypi.org/simple/ anixart==0.3.5.1 \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0438\u0437 \u0438\u0441\u0445\u043e\u0434\u043d\u0438\u043a\u043e\u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432\u0435\u0440\u0441\u0438\u0438","title":"Version: 0.3.5.1, Build: 570"},{"location":"CHANGELOG/#22012022","text":"","title":"22.01.2022"},{"location":"CHANGELOG/#version-035-build-568","text":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043a\u043b\u0430\u0441\u0441 anix.profile.blocklist \u0441 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438: get add remove \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043a\u043b\u0430\u0441\u0441 anix.profile.list \u0441 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438: get \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043a\u043b\u0430\u0441\u0441 anix.coll.favorite \u0441 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438: get add delete \u0412 \u043a\u043b\u0430\u0441\u0441\u0435 anix.other \u0431\u044b\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u043c\u0435\u0442\u043e\u0434\u044b: history toggles \u041c\u0435\u0442\u043e\u0434 anix.profile.blocklist() \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0451\u043d \u0432 \u043a\u043b\u0430\u0441\u0441 anix.profile.blocklist \u0438 \u0442\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f anix.profile.bl.get(page) . \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 @property . \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d logger , \u0432\u044b\u0432\u043e\u0434\u0438\u0442 DEBUG \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e.","title":"Version: 0.3.5, Build: 568"},{"location":"CHANGELOG/#21012022","text":"","title":"21.01.2022"},{"location":"CHANGELOG/#version-034-build-519","text":"\u041f\u0435\u0440\u0435\u043d\u0451\u0441 \u0441\u0435\u0441\u0441\u0438\u044e \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0432 AnixUserAccount . \u0411\u044b\u043b \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u0438\u0437\u0443\u0447\u0435\u043d Anixart API. \u0411\u044b\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b. \u041c\u0435\u0442\u043e\u0434 anix.other.voice() \u0431\u044b\u043b \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043d\u0430 anix.other.type() .","title":"Version: 0.3.4, Build: 519"},{"location":"CHANGELOG/#20012022","text":"","title":"20.01.2022"},{"location":"CHANGELOG/#version-0331-build-509","text":"\u0418\u0441\u043f\u0440\u0430\u0432\u0438\u043b \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u0430 EDIT_AVATAR \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u043a\u043e\u0434\u0430\u043c\u0438 \u043e\u0448\u0438\u0431\u043e\u043a.","title":"Version: 0.3.3.1, Build: 509"},{"location":"CHANGELOG/#version-033-build-501","text":"\u0411\u044b\u043b \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043a\u043b\u0430\u0441\u0441 Release, \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u0442\u0443\u0442 \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0438\u043c\u043f\u043e\u0440\u0442\u044b \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f","title":"Version: 0.3.3, Build: 501"},{"location":"CHANGELOG/#anixart-api-wrapper-docs","text":"","title":"Anixart API Wrapper Docs"},{"location":"CHANGELOG/#21012022_1","text":"","title":"21.01.2022"},{"location":"CHANGELOG/#version-092","text":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u0440\u0430\u0437\u0434\u0435\u043b API Anixart API Anixart: \u041e\u043f\u0438\u0441\u0430\u043d Auth \u0427\u0430\u0441\u0442\u0438\u0447\u043d\u043e \u043e\u043f\u0438\u0441\u0430\u043d Profile \u041e\u043f\u0438\u0441\u0430\u043d Other","title":"Version: 0.9.2"},{"location":"CHANGELOG/#20012022_1","text":"","title":"20.01.2022"},{"location":"CHANGELOG/#version-091","text":"\u041f\u0435\u0440\u0435\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u0430 \u043f\u043e\u0434\u0430\u0447\u0430 \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u0440\u0430\u0437\u0434\u0435\u043b\u044b \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d CHANGELOG","title":"Version: 0.9.1"},{"location":"CHANGELOG/#version-090","text":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0430 \u041e\u043f\u0438\u0441\u0430\u043d\u044b \u0432\u0441\u0435 \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b","title":"Version: 0.9.0"},{"location":"callback/","text":"\u041e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u0441\u0432\u044f\u0437\u044c Vkontakte - \u0414\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 95% \u0441\u043b\u0443\u0447\u0430\u0435\u0432. Telegram - \u0414\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 98% \u0441\u043b\u0443\u0447\u0430\u0435\u0432. SantaSpeen@gmail.com - \u0418\u043d\u043e\u0433\u0434\u0430 \u0437\u0430\u0445\u043e\u0436\u0443. \u041f\u0440\u043e\u0435\u043a\u0442 \u0432 GitHub: \u0442\u044b\u043a","title":"\u041e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u0441\u0432\u044f\u0437\u044c"},{"location":"callback/#_1","text":"Vkontakte - \u0414\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 95% \u0441\u043b\u0443\u0447\u0430\u0435\u0432. Telegram - \u0414\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 98% \u0441\u043b\u0443\u0447\u0430\u0435\u0432. SantaSpeen@gmail.com - \u0418\u043d\u043e\u0433\u0434\u0430 \u0437\u0430\u0445\u043e\u0436\u0443. \u041f\u0440\u043e\u0435\u043a\u0442 \u0432 GitHub: \u0442\u044b\u043a","title":"\u041e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u0441\u0432\u044f\u0437\u044c"},{"location":"ingl/","text":"\u041f\u0435\u0440\u0435\u0432\u043e\u0434 \u0442\u0435\u043a\u0441\u0442\u0430 Original: A computer to complete a job requires more than just the actual equipment or hardware we see and touch. It requires software - programs for directing the operation of a computer or electronic data. Software is the final computer system component. These computer programs instruct the hardware how to conduct processing. The comtuper is merely a general purpose machine which requires specific software to perform a given task. Computers can input, calculate, compare, and output data as information. Software determines the order in which these operation are performed. \u041f\u0435\u0440\u0435\u0432\u043e\u0434: \u041a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0443 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e \u0444\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043b\u0438 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0432\u0438\u0434\u0438\u043c \u0438 \u043a \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043f\u0440\u0438\u043a\u0430\u0441\u0430\u0435\u043c\u0441\u044f. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0435 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u0435 - \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u043e\u0439 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430 \u0438\u043b\u0438 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445. \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0435 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b. \u042d\u0442\u0438 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u043d\u044b\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u0438\u0440\u0443\u044e\u0442 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435, \u043a\u0430\u043a \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443.","title":"\u041f\u0435\u0440\u0435\u0432\u043e\u0434 \u0442\u0435\u043a\u0441\u0442\u0430"},{"location":"ingl/#_1","text":"","title":"\u041f\u0435\u0440\u0435\u0432\u043e\u0434 \u0442\u0435\u043a\u0441\u0442\u0430"},{"location":"ingl/#original","text":"A computer to complete a job requires more than just the actual equipment or hardware we see and touch. It requires software - programs for directing the operation of a computer or electronic data. Software is the final computer system component. These computer programs instruct the hardware how to conduct processing. The comtuper is merely a general purpose machine which requires specific software to perform a given task. Computers can input, calculate, compare, and output data as information. Software determines the order in which these operation are performed.","title":"Original:"},{"location":"ingl/#_2","text":"\u041a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0443 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e \u0444\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043b\u0438 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0432\u0438\u0434\u0438\u043c \u0438 \u043a \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043f\u0440\u0438\u043a\u0430\u0441\u0430\u0435\u043c\u0441\u044f. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0435 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u0435 - \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u043e\u0439 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430 \u0438\u043b\u0438 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445. \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u0435 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b. \u042d\u0442\u0438 \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u043d\u044b\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u0438\u0440\u0443\u044e\u0442 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435, \u043a\u0430\u043a \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443.","title":"\u041f\u0435\u0440\u0435\u0432\u043e\u0434:"},{"location":"LibApi/","text":"API \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u041e\u0431\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043f\u0438\u0441\u043a\u043e\u0432 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u043c . \u0412\u0441\u0435 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0437\u0434\u0435\u0441\u044c: \u0442\u044b\u043a \u0412\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043a\u043b\u0430\u0441\u0441\u044b \u0412 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0432\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043a\u043b\u0430\u0441\u0441\u044b: AnixComment AnixProfileVotedSort AnixList from anixart import AnixComment , AnixProfileVotedSort , AnixList ... anix . profile . list ( list_id = AnixList . WATCHED ) ... anix . coll . comments . vote ( ccmid , mark = AnixComment . UP ) ... # \u0414\u043b\u044f AnixProfileVotedSort \u0435\u0449\u0451 \u043d\u0435\u0442 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435.","title":"\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435"},{"location":"LibApi/#api","text":"","title":"API \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438"},{"location":"LibApi/#_1","text":"\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043f\u0438\u0441\u043a\u043e\u0432 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u043c . \u0412\u0441\u0435 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0437\u0434\u0435\u0441\u044c: \u0442\u044b\u043a","title":"\u041e\u0431\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f"},{"location":"LibApi/#_2","text":"\u0412 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0432\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043a\u043b\u0430\u0441\u0441\u044b: AnixComment AnixProfileVotedSort AnixList from anixart import AnixComment , AnixProfileVotedSort , AnixList ... anix . profile . list ( list_id = AnixList . WATCHED ) ... anix . coll . comments . vote ( ccmid , mark = AnixComment . UP ) ... # \u0414\u043b\u044f AnixProfileVotedSort \u0435\u0449\u0451 \u043d\u0435\u0442 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435.","title":"\u0412\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043a\u043b\u0430\u0441\u0441\u044b"},{"location":"LibApi/methods/","text":"\u041c\u0435\u0442\u043e\u0434\u044b: Me \u041a\u043b\u0430\u0441\u0441 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430. \u041c\u0435\u0442\u043a\u0438: anixart , login \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 -> anix.me \u25cf login -> anix.me.get_login() \u25cf password -> anix.me.get_password() \u25cf token -> anix.me.get_token() \u25cf id -> anix.me.get_id() Auth \u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438. \u041c\u0435\u0442\u043a\u0438: anixart , auth \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 -> anix.auth \u25cf Sing In -> anix.auth.sing_in() ; \u041d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0441\u0430\u043c\u0430 \u0432\u0445\u043e\u0434\u0438\u0442 \u0432 \u0430\u043a\u043a\u0430\u0443\u043d\u0442. \u25cf Sing Up -> anix.auth.sing_up() ; \u041d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0441\u0430\u043c\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u0430\u043a\u043a\u0430\u0443\u043d\u0442. \u25cf Firebase -> anix.auth.firebase() ; \u25cf Change password -> anix.auth.change_password(old_pass, new_pass) ; \u0421\u043c\u0435\u043d\u0430 \u043f\u0430\u0440\u043e\u043b\u044f. Profile \u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u0440\u043e\u0444\u0438\u043b\u044f\u043c\u0438. \u041c\u0435\u0442\u043a\u0438: anixart , profile \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 -> anix.profile \u25cf get -> anix.profile.get(uid) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u043e\u0444\u0438\u043b\u044c \u043f\u043e uid. \u25cf history -> anix.profile.history(uid, page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u043d\u0438\u043a\u043d\u0435\u0439\u043c\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u25cf blocklist -> anix.profile.bl : get -> anix.profile.bl.get(page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0432\u043e\u0439 \u0447\u0451\u0440\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a. add -> anix.profile.bl.add(uid) ; \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0432 \u0447\u0451\u0440\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a. remove -> anix.profile.bl.remove(uid) ; \u0423\u0431\u0440\u0430\u0442\u044c \u0438\u0437 \u0447\u0451\u0440\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430. \u25cf friends anix.profile.friends : get -> anix.profile.friends.get(uid, page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u0440\u0443\u0437\u0435\u0439 \u043f\u043e uid. incoming -> anix.profile.friends.incoming() ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0437\u0430\u044f\u0432\u043a\u0438 \u0432 \u0434\u0440\u0443\u0437\u044c\u044f. outgoing -> anix.profile.friends.outgoing() ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0441\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0437\u0430\u044f\u0432\u043a\u0438 \u0432 \u0434\u0440\u0443\u0437\u044c\u044f. add -> anix.profile.friends.add(uid) ; \u041f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. uid \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d. accept -> anix.profile.friends.accept(uid) ; \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0437\u0430\u044f\u0432\u043a\u0443 \u0432 \u0434\u0440\u0443\u0437\u044c\u044f. uid \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d. remove -> anix.profile.friends.remove(uid) ; \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0434\u0440\u0443\u0437\u0435\u0439. uid \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d. \u25cf vote anix.profile.vote : voted -> anix.profile.vote.voted(uid, page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0446\u0435\u043d\u0451\u043d\u043d\u044b\u0445 \u0430\u043d\u0438\u043c\u0435. unvoted -> anix.profile.vote.unvoted(page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0446\u0435\u043d\u0451\u043d\u043d\u044b\u0445 \u0430\u043d\u0438\u043c\u0435. \u25cf edit anix.profile.edit : status -> anix.profile.edit.status(text) ; \u041e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441. social -> anix.profile.edit.social(instId, tgId, vkId, ttId) ; \u041e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u044b. \u25cf list anix.profile.list : get -> anix.profile.list.get(uid, list_id, page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0435\u043b\u0438\u0437\u044b \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u043e\u0432 Collections \u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f\u043c\u0438 \u041c\u0435\u0442\u043a\u0438: anixart , aniu , collections \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 -> anix.collection , \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c anix.coll . \u25cf \u25cf get -> anix.coll.get(cid) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044e \u043f\u043e cid. \u25cf list -> anix.coll.list(page) ; Get recommend list of collections; \u25cf \u25cf releases -> anix.coll.releases(cid, page) ; Get releases in a collection. \u25cf \u25cf search -> anix.coll.search(query, page) ; Finding a collection by name. \u25cf comments anix.coll.comments : get -> anix.coll.comments.get(cid, page) ; Get collection comments. add -> anix.coll.comments.add(cid, message, parent_comment_id, reply_to_profile_id, spoiler) ; Add comment to collection. vote -> anix.coll.comments.vote(ccmid, mark) ; Rate a comment. votes -> anix.coll.comments.votes(ccmid, page) ; List of rated. replies -> anix.coll.comments.replies(ccmid, page) ; Responses to a comment. edit -> anix.coll.comments.edit(ccmid, message, spoiler) ; Edit a comment. delete -> anix.coll.comments.delete(ccmid) ; Delete a comment. \u25cf favorite anix.coll.favorite : get -> anix.coll.favorite.get(page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0437\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438. add -> anix.coll.favorite.add(cid) ; \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044e \u0432 \u0438\u0437\u0431\u0440\u0430\u043d\u043d\u044b\u0435. delete -> anix.coll.favorite.delete(cid) ; \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044e \u0438\u0437 \u0438\u0437\u0431\u0440\u0430\u043d\u043d\u044b\u0445. Release \u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0440\u0435\u043b\u0438\u0437\u0430\u043c\u0438 (\u0430\u043d\u0438\u043c\u0435) \u041c\u0435\u0442\u043a\u0438: anixart , aniu \u00b9 , release \u00b9 \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 , \u043d\u0430 aniu rid \u043d\u0435 \u0432\u0441\u0435\u0433\u0434\u0430 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442 \u0441 rid \u043d\u0430 anixart . \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 -> anix.release \u25cf \u25cf get -> anix.release.get(rid) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0435\u043b\u0438\u0437 \u043f\u043e rid. \u25cf random -> anix.release.random() ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u043d\u0434\u043e\u043c\u043d\u044b\u0439 \u0440\u0435\u043b\u0438\u0437. \u25cf vote: add -> anix.release.get(rid, rmark) ; \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0443 \u0440\u0435\u043b\u0438\u0437\u0443. delete -> anix.release.get(rid) ; \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0432\u043e\u044e \u043e\u0446\u0435\u043d\u043a\u0443 \u0443 \u0440\u0435\u043b\u0438\u0437\u0430. \u25cf comments anix.release.comments : get -> anix.release.comments.get(cid, page) ; Get release comments. add -> anix.release.comments.add(cid, message, parent_comment_id, reply_to_profile_id, spoiler) ; Add comment to release. vote -> anix.release.comments.vote(rcmid, mark) ; Rate a comment. votes -> anix.release.comments.votes(rcmid, page) ; List of rated. replies -> anix.release.comments.replies(rcmid, page) ; Responses to a comment. edit -> anix.release.comments.edit(rcmid, message, spoiler) ; Edit a comment. delete -> anix.release.comments.delete(rcmid) ; Delete a comment. Other \u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438 \u041c\u0435\u0442\u043a\u0438: anixart , other \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 -> anix.other \u25cf voice -> anix.other.type() ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u043e\u0437\u0432\u0443\u0447\u0435\u043a. \u25cf history -> anix.other.history(page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0432\u043e\u044e \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u043e\u0432. \u25cf toggles -> anix.other.toggles(app_ver: int, is_beta: bool) ; \u0417\u0430\u043c\u0435\u0442\u043a\u0438 \u043e \u043d\u043e\u0432\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438.","title":"\u041c\u0435\u0442\u043e\u0434\u044b"},{"location":"LibApi/methods/#_1","text":"","title":"\u041c\u0435\u0442\u043e\u0434\u044b:"},{"location":"LibApi/methods/#me","text":"\u041a\u043b\u0430\u0441\u0441 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430. \u041c\u0435\u0442\u043a\u0438: anixart , login \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 -> anix.me \u25cf login -> anix.me.get_login() \u25cf password -> anix.me.get_password() \u25cf token -> anix.me.get_token() \u25cf id -> anix.me.get_id()","title":"Me"},{"location":"LibApi/methods/#auth","text":"\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438. \u041c\u0435\u0442\u043a\u0438: anixart , auth \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 -> anix.auth \u25cf Sing In -> anix.auth.sing_in() ; \u041d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0441\u0430\u043c\u0430 \u0432\u0445\u043e\u0434\u0438\u0442 \u0432 \u0430\u043a\u043a\u0430\u0443\u043d\u0442. \u25cf Sing Up -> anix.auth.sing_up() ; \u041d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0441\u0430\u043c\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u0430\u043a\u043a\u0430\u0443\u043d\u0442. \u25cf Firebase -> anix.auth.firebase() ; \u25cf Change password -> anix.auth.change_password(old_pass, new_pass) ; \u0421\u043c\u0435\u043d\u0430 \u043f\u0430\u0440\u043e\u043b\u044f.","title":"Auth"},{"location":"LibApi/methods/#profile","text":"\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u0440\u043e\u0444\u0438\u043b\u044f\u043c\u0438. \u041c\u0435\u0442\u043a\u0438: anixart , profile \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 -> anix.profile \u25cf get -> anix.profile.get(uid) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u043e\u0444\u0438\u043b\u044c \u043f\u043e uid. \u25cf history -> anix.profile.history(uid, page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u043d\u0438\u043a\u043d\u0435\u0439\u043c\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u25cf blocklist -> anix.profile.bl : get -> anix.profile.bl.get(page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0432\u043e\u0439 \u0447\u0451\u0440\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a. add -> anix.profile.bl.add(uid) ; \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0432 \u0447\u0451\u0440\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a. remove -> anix.profile.bl.remove(uid) ; \u0423\u0431\u0440\u0430\u0442\u044c \u0438\u0437 \u0447\u0451\u0440\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430. \u25cf friends anix.profile.friends : get -> anix.profile.friends.get(uid, page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u0440\u0443\u0437\u0435\u0439 \u043f\u043e uid. incoming -> anix.profile.friends.incoming() ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0437\u0430\u044f\u0432\u043a\u0438 \u0432 \u0434\u0440\u0443\u0437\u044c\u044f. outgoing -> anix.profile.friends.outgoing() ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0441\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0437\u0430\u044f\u0432\u043a\u0438 \u0432 \u0434\u0440\u0443\u0437\u044c\u044f. add -> anix.profile.friends.add(uid) ; \u041f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. uid \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d. accept -> anix.profile.friends.accept(uid) ; \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0437\u0430\u044f\u0432\u043a\u0443 \u0432 \u0434\u0440\u0443\u0437\u044c\u044f. uid \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d. remove -> anix.profile.friends.remove(uid) ; \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0434\u0440\u0443\u0437\u0435\u0439. uid \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d. \u25cf vote anix.profile.vote : voted -> anix.profile.vote.voted(uid, page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0446\u0435\u043d\u0451\u043d\u043d\u044b\u0445 \u0430\u043d\u0438\u043c\u0435. unvoted -> anix.profile.vote.unvoted(page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0446\u0435\u043d\u0451\u043d\u043d\u044b\u0445 \u0430\u043d\u0438\u043c\u0435. \u25cf edit anix.profile.edit : status -> anix.profile.edit.status(text) ; \u041e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441. social -> anix.profile.edit.social(instId, tgId, vkId, ttId) ; \u041e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u044b. \u25cf list anix.profile.list : get -> anix.profile.list.get(uid, list_id, page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0435\u043b\u0438\u0437\u044b \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u043e\u0432","title":"Profile"},{"location":"LibApi/methods/#collections","text":"\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f\u043c\u0438 \u041c\u0435\u0442\u043a\u0438: anixart , aniu , collections \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 -> anix.collection , \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c anix.coll . \u25cf \u25cf get -> anix.coll.get(cid) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044e \u043f\u043e cid. \u25cf list -> anix.coll.list(page) ; Get recommend list of collections; \u25cf \u25cf releases -> anix.coll.releases(cid, page) ; Get releases in a collection. \u25cf \u25cf search -> anix.coll.search(query, page) ; Finding a collection by name. \u25cf comments anix.coll.comments : get -> anix.coll.comments.get(cid, page) ; Get collection comments. add -> anix.coll.comments.add(cid, message, parent_comment_id, reply_to_profile_id, spoiler) ; Add comment to collection. vote -> anix.coll.comments.vote(ccmid, mark) ; Rate a comment. votes -> anix.coll.comments.votes(ccmid, page) ; List of rated. replies -> anix.coll.comments.replies(ccmid, page) ; Responses to a comment. edit -> anix.coll.comments.edit(ccmid, message, spoiler) ; Edit a comment. delete -> anix.coll.comments.delete(ccmid) ; Delete a comment. \u25cf favorite anix.coll.favorite : get -> anix.coll.favorite.get(page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0438\u0437\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438. add -> anix.coll.favorite.add(cid) ; \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044e \u0432 \u0438\u0437\u0431\u0440\u0430\u043d\u043d\u044b\u0435. delete -> anix.coll.favorite.delete(cid) ; \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044e \u0438\u0437 \u0438\u0437\u0431\u0440\u0430\u043d\u043d\u044b\u0445.","title":"Collections"},{"location":"LibApi/methods/#release","text":"\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0440\u0435\u043b\u0438\u0437\u0430\u043c\u0438 (\u0430\u043d\u0438\u043c\u0435) \u041c\u0435\u0442\u043a\u0438: anixart , aniu \u00b9 , release \u00b9 \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 , \u043d\u0430 aniu rid \u043d\u0435 \u0432\u0441\u0435\u0433\u0434\u0430 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442 \u0441 rid \u043d\u0430 anixart . \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 -> anix.release \u25cf \u25cf get -> anix.release.get(rid) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0435\u043b\u0438\u0437 \u043f\u043e rid. \u25cf random -> anix.release.random() ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u043d\u0434\u043e\u043c\u043d\u044b\u0439 \u0440\u0435\u043b\u0438\u0437. \u25cf vote: add -> anix.release.get(rid, rmark) ; \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0443 \u0440\u0435\u043b\u0438\u0437\u0443. delete -> anix.release.get(rid) ; \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0432\u043e\u044e \u043e\u0446\u0435\u043d\u043a\u0443 \u0443 \u0440\u0435\u043b\u0438\u0437\u0430. \u25cf comments anix.release.comments : get -> anix.release.comments.get(cid, page) ; Get release comments. add -> anix.release.comments.add(cid, message, parent_comment_id, reply_to_profile_id, spoiler) ; Add comment to release. vote -> anix.release.comments.vote(rcmid, mark) ; Rate a comment. votes -> anix.release.comments.votes(rcmid, page) ; List of rated. replies -> anix.release.comments.replies(rcmid, page) ; Responses to a comment. edit -> anix.release.comments.edit(rcmid, message, spoiler) ; Edit a comment. delete -> anix.release.comments.delete(rcmid) ; Delete a comment.","title":"Release"},{"location":"LibApi/methods/#other","text":"\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438 \u041c\u0435\u0442\u043a\u0438: anixart , other \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 -> anix.other \u25cf voice -> anix.other.type() ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u043e\u0437\u0432\u0443\u0447\u0435\u043a. \u25cf history -> anix.other.history(page) ; \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0432\u043e\u044e \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u043e\u0432. \u25cf toggles -> anix.other.toggles(app_ver: int, is_beta: bool) ; \u0417\u0430\u043c\u0435\u0442\u043a\u0438 \u043e \u043d\u043e\u0432\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438.","title":"Other"},{"location":"LibApi/tags/","text":"\u041c\u0435\u0442\u043a\u0438 \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b API. \u25cf - anixart \u25cf - aniu \u041a\u043b\u0430\u0441\u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438. \u25cf - login \u25cf - auth \u25cf - profile \u25cf - collections \u25cf - release \u25cf - other \u0423\u0441\u043b\u043e\u0432\u043d\u044b\u0435 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f uid - int ; User Id, default : anix.me.get_id() rid - int ; Release Id. cid - int ; Collection id. ccmid - int ; Collection comment id. rcmid - int ; Release comment id. page - int ; \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0434\u0430\u043d\u043d\u044b\u0445, default : 0. query - str ; \u0422\u0435\u043a\u0441\u0442 \u043f\u043e\u0438\u0441\u043a\u0430. message - str ; \u0422\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f. spoiler - bool ; \u042f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0441\u043f\u043e\u0439\u043b\u0435\u0440\u043e\u043c, default : False. mark - int ; \u041e\u0446\u0435\u043d\u043a\u0430 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 AnixComment.UP \u0438\u043b\u0438 AnixComment.DOWN rmark - int ; \u041e\u0446\u0435\u043d\u043a\u0430 \u0430\u043d\u0438\u043c\u0435 \u0440\u0435\u043b\u0438\u0437\u0430. \u041e\u0442 1 \u0434\u043e 10. from anixart import AnixComment ... mark = AnixComment.UP anix.coll.comments.vote(ccmid, mark)","title":"\u041c\u0435\u0442\u043a\u0438 \u0438 \u0443\u0441\u043b\u043e\u0432\u043d\u044b\u0435 \u043e\u0431\u043e\u0437\u043d\u043e\u0447\u0435\u043d\u0438\u044f"},{"location":"LibApi/tags/#_1","text":"\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b API. \u25cf - anixart \u25cf - aniu \u041a\u043b\u0430\u0441\u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438. \u25cf - login \u25cf - auth \u25cf - profile \u25cf - collections \u25cf - release \u25cf - other","title":"\u041c\u0435\u0442\u043a\u0438"},{"location":"LibApi/tags/#_2","text":"uid - int ; User Id, default : anix.me.get_id() rid - int ; Release Id. cid - int ; Collection id. ccmid - int ; Collection comment id. rcmid - int ; Release comment id. page - int ; \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0434\u0430\u043d\u043d\u044b\u0445, default : 0. query - str ; \u0422\u0435\u043a\u0441\u0442 \u043f\u043e\u0438\u0441\u043a\u0430. message - str ; \u0422\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f. spoiler - bool ; \u042f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0441\u043f\u043e\u0439\u043b\u0435\u0440\u043e\u043c, default : False. mark - int ; \u041e\u0446\u0435\u043d\u043a\u0430 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 AnixComment.UP \u0438\u043b\u0438 AnixComment.DOWN rmark - int ; \u041e\u0446\u0435\u043d\u043a\u0430 \u0430\u043d\u0438\u043c\u0435 \u0440\u0435\u043b\u0438\u0437\u0430. \u041e\u0442 1 \u0434\u043e 10. from anixart import AnixComment ... mark = AnixComment.UP anix.coll.comments.vote(ccmid, mark)","title":"\u0423\u0441\u043b\u043e\u0432\u043d\u044b\u0435 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f"},{"location":"LibApi/todo_methods/","text":"Profile list: add # GET SETTINGS_NOTIFICATION = \"/profile/preference/notification/my\" SETTINGS_RELEASE_NOTIFICATION = \"/profile/preference/notification/episode/edit\" SETTINGS_RELEASE_FIRST_NOTIFICATION = \"/profile/preference/notification/episode/first/edit\" SETTINGS_COMMENTS_NOTIFICATION = \"/profile/preference/notification/comment/edit\" SETTINGS_COLLECTION_NOTIFICATION = \"/profile/preference/notification/my/collection/comment/edit\" Collections: my: get create edit delete Discover interesting watching discussing comments schedule Filter get Episode get: voice player video set: watch unwatch Search # data: { \"query\": text, \"searchBy\": 0} # POST COLLECTION_SEARCH = \"/search/collections/ {} \" # page RELEASE_SEARCH = \"/search/releases/ {} \" # page FAVORITE_SEARCH = \"/search/favorites/ {} \" # page COLLECTION_SEARCH_FAVORITE = \"/search/favoriteCollections/ {} \" # page LIST_SEARCH = \"/search/profile/list/ {} / {} \" # list id / page PROFILE_SEARCH = \"/search/profiles/ {} \" # page HISTORY_SEARCH = \"/search/history/ {} \" # page Notifications # GET NOTIFICATION_READ = \"/notification/read\" NOTIFICATION_COUNT = \"/notification/count\" NOTIFICATION_COLLECTION_COMMENTS = \"/notification/collectionComments/ {} \" # page NOTIFICATION_MY_COLLECTION_COMMENTS = \"/notification/my/collection/comments/ {} \" # page NOTIFICATION_RELEASE_COMMENTS = \"/notification/releaseComments/ {} \" # page NOTIFICATION_EPISODES = \"/notification/episodes/ {} \" # page NOTIFICATION_FRIEND = \"/notification/friends/ {} \" # page Other # POST EXPORT_BOOKMARKS = \"/export/bookmarks\" # {\"bookmarksExportProfileLists\":[0 - favorite, + all in AnixList]} IMPORT_BOOKMARKS = \"/import/bookmarks\" # {\"completed\":[],\"dropped\":[],\"holdOn\":[],\"plans\":[],\"watching\":[],\"selected_importer_name\":\"Shikimori\"} CAN_IMPORT_BOOKMARKS = \"/import/status\" # code: 0 - Yes, code: 2 - no Search # { \"query\": text, \"searchBy\": 0} # POST COLLECTION_SEARCH = \"/search/collections/ {} \" # page RELEASE_SEARCH = \"/search/releases/ {} \" # page FAVORITE_SEARCH = \"/search/favorites/ {} \" # page COLLECTION_SEARCH_FAVORITE = \"/search/favoriteCollections/ {} \" # page LIST_SEARCH = \"/search/profile/list/ {} / {} \" # list id / page PROFILE_SEARCH = \"/search/profiles/ {} \" # page HISTORY_SEARCH = \"/search/history/ {} \" # page","title":"\u041d\u0435\u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b"},{"location":"LibApi/todo_methods/#profile","text":"list: add # GET SETTINGS_NOTIFICATION = \"/profile/preference/notification/my\" SETTINGS_RELEASE_NOTIFICATION = \"/profile/preference/notification/episode/edit\" SETTINGS_RELEASE_FIRST_NOTIFICATION = \"/profile/preference/notification/episode/first/edit\" SETTINGS_COMMENTS_NOTIFICATION = \"/profile/preference/notification/comment/edit\" SETTINGS_COLLECTION_NOTIFICATION = \"/profile/preference/notification/my/collection/comment/edit\"","title":"Profile"},{"location":"LibApi/todo_methods/#collections","text":"my: get create edit delete","title":"Collections:"},{"location":"LibApi/todo_methods/#discover","text":"interesting watching discussing comments schedule","title":"Discover"},{"location":"LibApi/todo_methods/#filter","text":"get","title":"Filter"},{"location":"LibApi/todo_methods/#episode","text":"get: voice player video set: watch unwatch","title":"Episode"},{"location":"LibApi/todo_methods/#search","text":"# data: { \"query\": text, \"searchBy\": 0} # POST COLLECTION_SEARCH = \"/search/collections/ {} \" # page RELEASE_SEARCH = \"/search/releases/ {} \" # page FAVORITE_SEARCH = \"/search/favorites/ {} \" # page COLLECTION_SEARCH_FAVORITE = \"/search/favoriteCollections/ {} \" # page LIST_SEARCH = \"/search/profile/list/ {} / {} \" # list id / page PROFILE_SEARCH = \"/search/profiles/ {} \" # page HISTORY_SEARCH = \"/search/history/ {} \" # page","title":"Search"},{"location":"LibApi/todo_methods/#notifications","text":"# GET NOTIFICATION_READ = \"/notification/read\" NOTIFICATION_COUNT = \"/notification/count\" NOTIFICATION_COLLECTION_COMMENTS = \"/notification/collectionComments/ {} \" # page NOTIFICATION_MY_COLLECTION_COMMENTS = \"/notification/my/collection/comments/ {} \" # page NOTIFICATION_RELEASE_COMMENTS = \"/notification/releaseComments/ {} \" # page NOTIFICATION_EPISODES = \"/notification/episodes/ {} \" # page NOTIFICATION_FRIEND = \"/notification/friends/ {} \" # page","title":"Notifications"},{"location":"LibApi/todo_methods/#other","text":"# POST EXPORT_BOOKMARKS = \"/export/bookmarks\" # {\"bookmarksExportProfileLists\":[0 - favorite, + all in AnixList]} IMPORT_BOOKMARKS = \"/import/bookmarks\" # {\"completed\":[],\"dropped\":[],\"holdOn\":[],\"plans\":[],\"watching\":[],\"selected_importer_name\":\"Shikimori\"} CAN_IMPORT_BOOKMARKS = \"/import/status\" # code: 0 - Yes, code: 2 - no","title":"Other"},{"location":"LibApi/todo_methods/#search_1","text":"# { \"query\": text, \"searchBy\": 0} # POST COLLECTION_SEARCH = \"/search/collections/ {} \" # page RELEASE_SEARCH = \"/search/releases/ {} \" # page FAVORITE_SEARCH = \"/search/favorites/ {} \" # page COLLECTION_SEARCH_FAVORITE = \"/search/favoriteCollections/ {} \" # page LIST_SEARCH = \"/search/profile/list/ {} / {} \" # list id / page PROFILE_SEARCH = \"/search/profiles/ {} \" # page HISTORY_SEARCH = \"/search/history/ {} \" # page","title":"Search"},{"location":"anixApi/","text":"Anixart API \u0421\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432: Auth Profile \u041a\u043b\u0430\u0441\u0441 \u043e\u043f\u0438\u0441\u0430\u043d \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u043e. Collection \u041a\u043b\u0430\u0441\u0441 \u043d\u0435 \u043e\u043f\u0438\u0441\u0430\u043d. Release \u041a\u043b\u0430\u0441\u0441 \u043d\u0435 \u043e\u043f\u0438\u0441\u0430\u043d. Other \u0411\u044b\u0441\u0442\u0440\u044b\u0439 \u0441\u0442\u0430\u0440\u0442 API (application programming interface) \u2014 \u044d\u0442\u043e \u043f\u043e\u0441\u0440\u0435\u0434\u043d\u0438\u043a \u043c\u0435\u0436\u0434\u0443 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0438 \u043a\u0430\u043a\u043e\u0439-\u043b\u0438\u0431\u043e \u0441\u0440\u0435\u0434\u043e\u0439, \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u044d\u0442\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c. API \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u0434\u0430, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430\u0431\u043e\u0440 \u0433\u043e\u0442\u043e\u0432\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432, \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0438\u043b\u0438 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0438\u043c\u0435\u044e\u0449\u0438\u043c\u0438\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u043c\u0438. \u0424\u043e\u0440\u043c\u0430\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0427\u0442\u043e\u0431\u044b \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u043a \u043c\u0435\u0442\u043e\u0434\u0443 API, \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c POST \u0438\u043b\u0438 GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0432\u0438\u0434\u0430: https://api.anixart.tv/METHOD?PARAMS&token=TOKEN \u041e\u043d \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0447\u0430\u0441\u0442\u0435\u0439: METHOD (\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e) \u2014 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 API, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043a \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443. PARAMS (\u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e) \u2014 \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430 API, \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043f\u0430\u0440 name=value, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0430\u043c\u043f\u0435\u0440\u0441\u0430\u043d\u0434\u043e\u043c. \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0443\u043a\u0430\u0437\u0430\u043d \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u043c\u0435\u0442\u043e\u0434\u0430. TOKEN (\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e) \u2014 \u043a\u043b\u044e\u0447 \u0434\u043e\u0441\u0442\u0443\u043f\u0430. \u0420\u0430\u0437\u0431\u043e\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 \u0441 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u043c 27 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441 \u0442\u0430\u043a\u043e\u0433\u043e \u0432\u0438\u0434\u0430: https://api.anixart.tv/profile/1?token=TOKEN \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u0432\u0441\u0435 \u0435\u0433\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435: https:// \u2014 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f, api.anixart.tv \u2014 \u0430\u0434\u0440\u0435\u0441 API-\u0441\u0435\u0440\u0432\u0438\u0441\u0430, /profile \u2014 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 API, /1 ?token= \u2014 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u0432\u0435\u0440\u043d\u0435\u0442 JSON-\u043e\u0431\u044a\u0435\u043a\u0442 \u0441 \u0437\u0430\u043f\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 (\u0438\u043b\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435, \u0435\u0441\u043b\u0438 \u0447\u0442\u043e-\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a). endpoints.py # -*- coding: utf-8 -*- class AnixComment : DOWN = 1 UP = 2 class AnixProfileVotedSort : LAST_FIRST = 1 OLD_FIRST = 2 STAR_5 = 3 STAR_4 = 4 STAR_3 = 5 STAR_2 = 6 STAR_1 = 7 class AnixList : WATCHING = 1 IN_PLANS = 2 WATCHED = 3 POSTPONED = 4 DROPPED = 5 API_URL = \"https://api.anixart.tv\" ################ AUTH ################ # POST SING_UP = \"/auth/signUp\" SING_UP_VERIFY = \"/auth/verify\" # {vkAccessToken, googleIdToken} SING_IN = \"/auth/signIn\" FIREBASE = \"/auth/firebase\" # Not Cheked # POST AUTH_RESEND = \"/auth/resend\" # {login, email, password, vkAccessToken, googleIdToken, hash} AUTH_RESTORE = \"/auth/restore\" # {data} AUTH_RESTORE_RESEND = \"/auth/restore/resend\" # {data, password, hash} AUTH_RESTORE_VERIFY = \"/auth/restore/verify\" # {data, password, hash, code} AUTH_SING_IN_WITH_GOOGLE = \"/auth/google\" # {googleIdToken} or {login, email, googleIdToken} AUTH_SING_IN_WITH_VK = \"/auth/vk\" # {vkAccessToken} ################ PROFILE ################ # TODO PROFILE: SETTINGS, SETTINGS_RELEASE, SETTINGS_RELEASE_FIRST, # SETTINGS_COMMENTS, SETTINGS_COLLECTION, EDIT_AVATAR, SETTINGS_RELEASE_LIST, # SETTINGS_RELEASE_TYPE # GET PROFILE = \"/profile/ {} \" # + profile id PROFILE_NICK_HISTORY = \"/profile/login/history/all/ {} / {} \" # profile id / page PROFILE_BLACKLIST = \"/profile/blocklist/all/ {} \" # page PROFILE_BLACKLIST_ADD = \"/profile/blocklist/add/ {} \" # profile id PROFILE_BLACKLIST_REMOVE = \"/profile/blocklist/remove/ {} \" # profile id FRIENDS = \"/profile/friend/all/ {} / {} \" # profile id / page FRIENDS_RQ_IN = \"/profile/friend/requests/in/ {} \" # page FRIENDS_RQ_OUT = \"/profile/friend/requests/out/ {} \" # page FRIENDS_RQ_IN_LAST = \"/profile/friend/requests/in/last\" FRIENDS_RQ_OUT_LAST = \"/profile/friend/requests/out/last\" FRIENDS_SEND = \"/profile/friend/request/send/ {} \" # profile id FRIENDS_REMOVE = \"/profile/friend/request/remove/ {} \" # profile id VOTE_VOTED = \"/profile/vote/release/voted/ {} / {} \" # profile id / page VOTE_UNVOTED = \"/profile/vote/release/unvoted/ {} \" # page LISTS = \"/profile/list/all/ {} / {} / {} \" # profile id / list id / page SETTINGS_NOTIFICATION = \"/profile/preference/notification/my\" SETTINGS_NOTIFICATION_RELEASE = \"/profile/preference/notification/episode/edit\" SETTINGS_NOTIFICATION_RELEASE_FIRST = \"/profile/preference/notification/episode/first/edit\" SETTINGS_NOTIFICATION_COMMENTS = \"/profile/preference/notification/comment/edit\" SETTINGS_NOTIFICATION_COLLECTION = \"/profile/preference/notification/my/collection/comment/edit\" CHANGE_PASSWORD = \"/profile/preference/password/change\" # POST EDIT_STATUS = \"/profile/preference/status/edit\" EDIT_SOCIAL = \"/profile/preference/social/edit\" EDIT_AVATAR = \"/profile/preference/avatar/edit\" SETTINGS_NOTIFICATION_RELEASE_LIST = \"/profile/preference/notification/status/edit\" # {\"profileStatusNotificationPreferences\":[0 - favorite, + all in AnixList]} SETTINGS_NOTIFICATION_RELEASE_TYPE = \"/profile/preference/notification/type/edit\" # {\"profileTypeNotificationPreferences\":[type ids]} # Not Checked # GET PROFILE_SOCIAL = \"/profile/social/ {} \" # profile id FRIENDS_RECOMENDATION = \"/profile/friend/recommendations\" FRIENDS_RQ_HIDE = \"profile/friend/request/hide/ {} \" # profile id SETTINGS_PROFILE = \"/profile/preference/my\" SETTINGS_PROFILE_CHANGE_EMAIL = \"/profile/preference/email/change\" # {current_password, current, new} SETTINGS_PROFILE_CHANGE_EMAIL_CONFIRM = \"/profile/preference/email/change/confirm\" # {current} # /profile/preference/social SETTINGS_PROFILE_STATUS_DELETE = \"/profile/preference/status/delete\" # POST PROFILE_PROCESS = \"/profile/process/ {} \" # profile id SETTINGS_PROFILE_CHANGE_LOGIN = \"/profile/preference/email/login/confirm\" # {login} SETTINGS_PROFILE_CHANGE_LOGIN_INFO = \"/profile/preference/email/login/info\" # {login} SETTINGS_PROFILE_BIND_GOOGLE = \"/profile/preference/google/bind\" # {idToken, } SETTINGS_PROFILE_UNBIND_GOOGLE = \"/profile/preference/google/unbind\" SETTINGS_PROFILE_BIND_VK = \"/profile/preference/google/bind\" # {accessToken, } SETTINGS_PROFILE_UNBIND_VK = \"/profile/preference/google/unbind\" SETTINGS_PROFILE_PRIVACY_COUNTS = \"/profile/preference/privacy/counts/edit\" SETTINGS_PROFILE_PRIVACY_FRIENDS_REQUESTS = \"/profile/preference/privacy/friendRequests/edit\" SETTINGS_PROFILE_PRIVACY_SOCIAL = \"/profile/preference/privacy/social/edit\" SETTINGS_PROFILE_PRIVACY_STATS = \"/profile/preference/privacy/stats/edit\" ############# COLLECTION ############# # GET COLLECTION = \"/collection/ {} \" # collection id COLLECTION_RELEASES = \"/collection/ {} /releases/ {} \" # collection id / page COLLECTION_LIST = \"/collection/all/ {} \" # page COLLECTION_COMMENTS = \"/collection/comment/all/ {} / {} \" # collection id / page COLLECTION_COMMENTS_VOTE = \"/collection/comment/vote/ {} / {} \" # collection comment id / mark (1, 2) COLLECTION_COMMENTS_VOTES = \"/collection/comment/votes/ {} / {} \" # collection comment id / page COLLECTION_COMMENTS_DELETE = \"/collection/comment/delete/ {} \" # collection comment id COLLECTION_FAVORITE = \"/collectionFavorite/all/ {} \" # page COLLECTION_FAVORITE_ADD = \"/collectionFavorite/add/ {} \" # collection id COLLECTION_FAVORITE_DELETE = \"/collectionFavorite/delete/ {} \" # collection id # POST COLLECTION_COMMENTS_ADD = \"/collection/comment/add/ {} \" # collection id COLLECTION_COMMENTS_EDIT = \"/collection/comment/edit/ {} \" # collection comment id COLLECTION_COMMENTS_REPLIES = \"/collection/comment/replies/ {} / {} \" # collection comment id / page # Not Checked # GET COLLECTION_PROFILE = \"/collection/all/profile/ {} / {} \" # p_id/page COLLECTION_RELEASE_IN = \"/collection/all/release/ {} / {} \" # r_id/page COLLECTION_MY = \"/collectionMy/ {id} /releases\" COLLECTION_MY_DELETE = \"/collectionMy/delete/ {} \" # collectionId COLLECTION_MY_ADD_RELEASE = \"/collectionMy/release/add/ {} \" # collectionId # POST COLLECTION_COMMENTS_PROCESS = \"/collection/comment/process/ {} \" # commentId COLLECTION_COMMENTS_REPORT = \"/collection/comment/report/ {} \" # commentId COLLECTION_REPORT = \"/collection/report/ {} \" # collectionId COLLECTION_MY_CREATE = \"/collectionMy/create\" COLLECTION_MY_EDIT = \"/collectionMy/edit/ {} \" # collectionId COLLECTION_MY_EDIT_IMAGE = \"/collectionMy/editImage/ {} \" # collectionId ############# RELEASE ############# # GET RELEASE = \"/release/ {} \" # release id RELEASE_VOTE_ADD = \"/release/vote/add/ {} / {} \" # release id / mark 1-5 RELEASE_VOTE_DELETE = \"/release/vote/delete/ {} \" # release id RELEASE_RANDOM = \"/release/random\" RELEASE_COMMENTS = \"/release/comment/all/ {} / {} \" # release id / page RELEASE_COMMENTS_VOTE = \"/release/comment/vote/ {} / {} \" # release comment id / mark (1, 2) RELEASE_COMMENTS_VOTES = \"/release/comment/votes/ {} / {} \" # release comment id / page RELEASE_COMMENTS_REPLIES = \"/release/comment/replies/ {} / {} \" # release comment id / page RELEASE_COMMENTS_DELETE = \"/release/comment/delete/ {} \" # release comment id # POST RELEASE_COMMENTS_ADD = \"/release/comment/add/ {} \" # release id RELEASE_COMMENTS_EDIT = \"/release/comment/edit/ {} \" # release comment id # Not Cheked # GET RELEASE_COMMENTS_REPORT = \"/release/comment/report/ {} \" # commentId RELEASE_COMMENTS_PROCESS = \"/release/comment/process/ {} \" # commentId RELEASE_PROFILE_COMMENTS = \"/release/comment/all/profile/ {} / {} \" # p_id/page RELEASE_STREAMING_PLATFORM = \"/release/streaming/platform/ {} /\" # releaseId # POST RELEASE_REPORT = \"/release/report/ {} \" # r_id ############# OTHER ############# # TODO OTHER: EXPORT_BOOKMARKS, IMPORT_BOOKMARKS, CAN_IMPORT_BOOKMARKS # GET TYPE = \"/type/all\" TYPE_RELEASE = \"/type/ {} \" # r_id TOGGLES = \"/config/toggles?version_code= {} &is_beta= {} \" # version_code: int, is_beta: bool SCHEDULE = \"/schedule\" # POST EXPORT_BOOKMARKS = \"/export/bookmarks\" # {\"bookmarksExportProfileLists\":[0 - favorite, + all in AnixList]} IMPORT_BOOKMARKS = \"/import/bookmarks\" # {\"completed\":[],\"dropped\":[],\"holdOn\":[],\"plans\":[],\"watching\":[],\"selected_importer_name\":\"Shikimori\"} CAN_IMPORT_BOOKMARKS = \"/import/status\" # code: 0 - Yes, code: 2 - no # Not Checked # GET FILTER = \"/filter/ {} \" # page {token, genres: [], studio, category, status, year, episodes, sort, country, season, duration, ratings: [], extended_mode: bool} RELATED = \"related/ {} / {} \" # relatedId/page # POST VIDEO_PARSE = \"/video/parse\" ############# SEARCH ############# # TODO SEARCH: * # { \"query\": text, \"searchBy\": 0} # POST SEARCH_COLLECTION = \"/search/collections/ {} \" # page SEARCH_RELEASE = \"/search/releases/ {} \" # page SEARCH_FAVORITE = \"/search/favorites/ {} \" # page SEARCH_COLLECTION_FAVORITE = \"/search/favoriteCollections/ {} \" # page SEARCH_LIST = \"/search/profile/list/ {} / {} \" # list id / page SEARCH_PROFILE = \"/search/profiles/ {} \" # page SEARCH_HISTORY = \"/search/history/ {} \" # page # SEARCH_COLLECTION_PROFILE = \"/search/profileCollections/ {} / {} \" # p_id/page ############# NOTIFICATIONS ############# # TODO NOTIFICATIONS: * # GET NOTIFICATION_READ = \"/notification/read\" NOTIFICATION_COUNT = \"/notification/count\" NOTIFICATION_COLLECTION_COMMENTS = \"/notification/collectionComments/ {} \" # page NOTIFICATION_MY_COLLECTION_COMMENTS = \"/notification/my/collection/comments/ {} \" # page NOTIFICATION_RELEASE_COMMENTS = \"/notification/releaseComments/ {} \" # page NOTIFICATION_EPISODES = \"/notification/episodes/ {} \" # page NOTIFICATION_FRIEND = \"/notification/friends/ {} \" # page NOTIFICATION_COLLECTION_COMMENTS_DELETE = \"/notification/collectionComment/delete/ {} \" # n_id NOTIFICATION_MY_COLLECTION_COMMENTS_DELETE = \"/notification/my/collection/comment/delete/ {} \" # page NOTIFICATION_RELEASE_COMMENTS_DELETE = \"/notification/releaseComment/delete/ {} \" # page NOTIFICATION_EPISODES_DELETE = \"/notification/episode/delete/ {} \" # page NOTIFICATION_FRIEND_DELETE = \"/notification/friends/delete/ {} \" # page ############# DISCOVER ############# # TODO DISCOVER: * # Not Cheked # POST DISCOVER_COMMENTS = \"/discover/comments\" DISCOVER_DISCUSSING = \"/discover/discussing\" # {token} DISCOVER_INTERESTING = \"/discover/interesting\" DISCOVER_RECOMENDATION = \"/discover/recommendations/ {} \" # page DISCOVER_WATCING = \"/discover/watching/ {} \" # page ############# EpisodeApi.kt ############# # TODO EpisodeApi.kt: * # \u041e\u0439, \u044f \u0437\u0430\u0435\u0431\u0430\u043b\u0441\u044f, \u044f \u0441\u043f\u0430\u0442\u044c.. # \u0417\u0434\u0435\u0441\u044c \u043c\u0435\u0442\u043e\u0434\u044b \u0438\u0437 com.swiftsoft.anixartd.network.api.EpisodeApi # \u0415\u0441\u043b\u0438 \u043d\u0430\u0434\u043e, \u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u0439 \u0442\u0430\u043a \u043a\u0430\u043a \u0442\u0435\u0431\u0435 \u043d\u0430\u0434\u043e # Not Checked # GET # @GET(\"episode/target/{releaseId}/{sourceId}/{position}\") # @GET(\"episode/{releaseId}/{typeId}/{sourceId}\") # @GET(\"episode/{releaseId}\") # @GET(\"episode/updates/{releaseId}/{page}\") # POST # @POST(\"episode/report/{releaseId}/{sourceId}/{position}\") # @POST(\"episode/unwatch/{releaseId}/{sourceId}/{position}\") # @POST(\"episode/unwatch/{releaseId}/{sourceId}\") # @POST(\"episode/watch/{releaseId}/{sourceId}/{position}\") # @POST(\"episode/watch/{releaseId}/{sourceId}\") ############# FAVORITE ############# # TODO FAVORITE: * # Not Checked # GET FAVORITE = \"/favorite/all/ {} \" # r_id FAVORITE_ADD = \"/favorite/add/ {} \" # r_id FAVORITE_DELETE = \"/favorite/delete/ {} \" # r_id {sort} ############# HISTORY ############# # TODO HISTORY: * # GET HISTORY = \"/history/ {} \" # page # Not Checked # GET HISTORY_ADD = \"/history/add/ {} / {} / {} \" # r_id/s_id/position HISTORY_DELETE = \"/history/delete/ {} \" # r_id","title":"\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435"},{"location":"anixApi/#anixart-api","text":"","title":"Anixart API"},{"location":"anixApi/#_1","text":"Auth Profile \u041a\u043b\u0430\u0441\u0441 \u043e\u043f\u0438\u0441\u0430\u043d \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u043e. Collection \u041a\u043b\u0430\u0441\u0441 \u043d\u0435 \u043e\u043f\u0438\u0441\u0430\u043d. Release \u041a\u043b\u0430\u0441\u0441 \u043d\u0435 \u043e\u043f\u0438\u0441\u0430\u043d. Other","title":"\u0421\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432:"},{"location":"anixApi/#_2","text":"API (application programming interface) \u2014 \u044d\u0442\u043e \u043f\u043e\u0441\u0440\u0435\u0434\u043d\u0438\u043a \u043c\u0435\u0436\u0434\u0443 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0438 \u043a\u0430\u043a\u043e\u0439-\u043b\u0438\u0431\u043e \u0441\u0440\u0435\u0434\u043e\u0439, \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u044d\u0442\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c. API \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u0434\u0430, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430\u0431\u043e\u0440 \u0433\u043e\u0442\u043e\u0432\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432, \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0438\u043b\u0438 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0438\u043c\u0435\u044e\u0449\u0438\u043c\u0438\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u043c\u0438.","title":"\u0411\u044b\u0441\u0442\u0440\u044b\u0439 \u0441\u0442\u0430\u0440\u0442"},{"location":"anixApi/#_3","text":"\u0427\u0442\u043e\u0431\u044b \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u043a \u043c\u0435\u0442\u043e\u0434\u0443 API, \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c POST \u0438\u043b\u0438 GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0432\u0438\u0434\u0430: https://api.anixart.tv/METHOD?PARAMS&token=TOKEN \u041e\u043d \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0447\u0430\u0441\u0442\u0435\u0439: METHOD (\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e) \u2014 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 API, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043a \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443. PARAMS (\u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e) \u2014 \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430 API, \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043f\u0430\u0440 name=value, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0430\u043c\u043f\u0435\u0440\u0441\u0430\u043d\u0434\u043e\u043c. \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0443\u043a\u0430\u0437\u0430\u043d \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u043c\u0435\u0442\u043e\u0434\u0430. TOKEN (\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e) \u2014 \u043a\u043b\u044e\u0447 \u0434\u043e\u0441\u0442\u0443\u043f\u0430.","title":"\u0424\u043e\u0440\u043c\u0430\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432"},{"location":"anixApi/#_4","text":"\u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 \u0441 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u043c 27 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441 \u0442\u0430\u043a\u043e\u0433\u043e \u0432\u0438\u0434\u0430: https://api.anixart.tv/profile/1?token=TOKEN \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u0432\u0441\u0435 \u0435\u0433\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435: https:// \u2014 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f, api.anixart.tv \u2014 \u0430\u0434\u0440\u0435\u0441 API-\u0441\u0435\u0440\u0432\u0438\u0441\u0430, /profile \u2014 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 API, /1 ?token= \u2014 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u0432\u0435\u0440\u043d\u0435\u0442 JSON-\u043e\u0431\u044a\u0435\u043a\u0442 \u0441 \u0437\u0430\u043f\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 (\u0438\u043b\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435, \u0435\u0441\u043b\u0438 \u0447\u0442\u043e-\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a).","title":"\u0420\u0430\u0437\u0431\u043e\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430"},{"location":"anixApi/#endpointspy","text":"# -*- coding: utf-8 -*- class AnixComment : DOWN = 1 UP = 2 class AnixProfileVotedSort : LAST_FIRST = 1 OLD_FIRST = 2 STAR_5 = 3 STAR_4 = 4 STAR_3 = 5 STAR_2 = 6 STAR_1 = 7 class AnixList : WATCHING = 1 IN_PLANS = 2 WATCHED = 3 POSTPONED = 4 DROPPED = 5 API_URL = \"https://api.anixart.tv\" ################ AUTH ################ # POST SING_UP = \"/auth/signUp\" SING_UP_VERIFY = \"/auth/verify\" # {vkAccessToken, googleIdToken} SING_IN = \"/auth/signIn\" FIREBASE = \"/auth/firebase\" # Not Cheked # POST AUTH_RESEND = \"/auth/resend\" # {login, email, password, vkAccessToken, googleIdToken, hash} AUTH_RESTORE = \"/auth/restore\" # {data} AUTH_RESTORE_RESEND = \"/auth/restore/resend\" # {data, password, hash} AUTH_RESTORE_VERIFY = \"/auth/restore/verify\" # {data, password, hash, code} AUTH_SING_IN_WITH_GOOGLE = \"/auth/google\" # {googleIdToken} or {login, email, googleIdToken} AUTH_SING_IN_WITH_VK = \"/auth/vk\" # {vkAccessToken} ################ PROFILE ################ # TODO PROFILE: SETTINGS, SETTINGS_RELEASE, SETTINGS_RELEASE_FIRST, # SETTINGS_COMMENTS, SETTINGS_COLLECTION, EDIT_AVATAR, SETTINGS_RELEASE_LIST, # SETTINGS_RELEASE_TYPE # GET PROFILE = \"/profile/ {} \" # + profile id PROFILE_NICK_HISTORY = \"/profile/login/history/all/ {} / {} \" # profile id / page PROFILE_BLACKLIST = \"/profile/blocklist/all/ {} \" # page PROFILE_BLACKLIST_ADD = \"/profile/blocklist/add/ {} \" # profile id PROFILE_BLACKLIST_REMOVE = \"/profile/blocklist/remove/ {} \" # profile id FRIENDS = \"/profile/friend/all/ {} / {} \" # profile id / page FRIENDS_RQ_IN = \"/profile/friend/requests/in/ {} \" # page FRIENDS_RQ_OUT = \"/profile/friend/requests/out/ {} \" # page FRIENDS_RQ_IN_LAST = \"/profile/friend/requests/in/last\" FRIENDS_RQ_OUT_LAST = \"/profile/friend/requests/out/last\" FRIENDS_SEND = \"/profile/friend/request/send/ {} \" # profile id FRIENDS_REMOVE = \"/profile/friend/request/remove/ {} \" # profile id VOTE_VOTED = \"/profile/vote/release/voted/ {} / {} \" # profile id / page VOTE_UNVOTED = \"/profile/vote/release/unvoted/ {} \" # page LISTS = \"/profile/list/all/ {} / {} / {} \" # profile id / list id / page SETTINGS_NOTIFICATION = \"/profile/preference/notification/my\" SETTINGS_NOTIFICATION_RELEASE = \"/profile/preference/notification/episode/edit\" SETTINGS_NOTIFICATION_RELEASE_FIRST = \"/profile/preference/notification/episode/first/edit\" SETTINGS_NOTIFICATION_COMMENTS = \"/profile/preference/notification/comment/edit\" SETTINGS_NOTIFICATION_COLLECTION = \"/profile/preference/notification/my/collection/comment/edit\" CHANGE_PASSWORD = \"/profile/preference/password/change\" # POST EDIT_STATUS = \"/profile/preference/status/edit\" EDIT_SOCIAL = \"/profile/preference/social/edit\" EDIT_AVATAR = \"/profile/preference/avatar/edit\" SETTINGS_NOTIFICATION_RELEASE_LIST = \"/profile/preference/notification/status/edit\" # {\"profileStatusNotificationPreferences\":[0 - favorite, + all in AnixList]} SETTINGS_NOTIFICATION_RELEASE_TYPE = \"/profile/preference/notification/type/edit\" # {\"profileTypeNotificationPreferences\":[type ids]} # Not Checked # GET PROFILE_SOCIAL = \"/profile/social/ {} \" # profile id FRIENDS_RECOMENDATION = \"/profile/friend/recommendations\" FRIENDS_RQ_HIDE = \"profile/friend/request/hide/ {} \" # profile id SETTINGS_PROFILE = \"/profile/preference/my\" SETTINGS_PROFILE_CHANGE_EMAIL = \"/profile/preference/email/change\" # {current_password, current, new} SETTINGS_PROFILE_CHANGE_EMAIL_CONFIRM = \"/profile/preference/email/change/confirm\" # {current} # /profile/preference/social SETTINGS_PROFILE_STATUS_DELETE = \"/profile/preference/status/delete\" # POST PROFILE_PROCESS = \"/profile/process/ {} \" # profile id SETTINGS_PROFILE_CHANGE_LOGIN = \"/profile/preference/email/login/confirm\" # {login} SETTINGS_PROFILE_CHANGE_LOGIN_INFO = \"/profile/preference/email/login/info\" # {login} SETTINGS_PROFILE_BIND_GOOGLE = \"/profile/preference/google/bind\" # {idToken, } SETTINGS_PROFILE_UNBIND_GOOGLE = \"/profile/preference/google/unbind\" SETTINGS_PROFILE_BIND_VK = \"/profile/preference/google/bind\" # {accessToken, } SETTINGS_PROFILE_UNBIND_VK = \"/profile/preference/google/unbind\" SETTINGS_PROFILE_PRIVACY_COUNTS = \"/profile/preference/privacy/counts/edit\" SETTINGS_PROFILE_PRIVACY_FRIENDS_REQUESTS = \"/profile/preference/privacy/friendRequests/edit\" SETTINGS_PROFILE_PRIVACY_SOCIAL = \"/profile/preference/privacy/social/edit\" SETTINGS_PROFILE_PRIVACY_STATS = \"/profile/preference/privacy/stats/edit\" ############# COLLECTION ############# # GET COLLECTION = \"/collection/ {} \" # collection id COLLECTION_RELEASES = \"/collection/ {} /releases/ {} \" # collection id / page COLLECTION_LIST = \"/collection/all/ {} \" # page COLLECTION_COMMENTS = \"/collection/comment/all/ {} / {} \" # collection id / page COLLECTION_COMMENTS_VOTE = \"/collection/comment/vote/ {} / {} \" # collection comment id / mark (1, 2) COLLECTION_COMMENTS_VOTES = \"/collection/comment/votes/ {} / {} \" # collection comment id / page COLLECTION_COMMENTS_DELETE = \"/collection/comment/delete/ {} \" # collection comment id COLLECTION_FAVORITE = \"/collectionFavorite/all/ {} \" # page COLLECTION_FAVORITE_ADD = \"/collectionFavorite/add/ {} \" # collection id COLLECTION_FAVORITE_DELETE = \"/collectionFavorite/delete/ {} \" # collection id # POST COLLECTION_COMMENTS_ADD = \"/collection/comment/add/ {} \" # collection id COLLECTION_COMMENTS_EDIT = \"/collection/comment/edit/ {} \" # collection comment id COLLECTION_COMMENTS_REPLIES = \"/collection/comment/replies/ {} / {} \" # collection comment id / page # Not Checked # GET COLLECTION_PROFILE = \"/collection/all/profile/ {} / {} \" # p_id/page COLLECTION_RELEASE_IN = \"/collection/all/release/ {} / {} \" # r_id/page COLLECTION_MY = \"/collectionMy/ {id} /releases\" COLLECTION_MY_DELETE = \"/collectionMy/delete/ {} \" # collectionId COLLECTION_MY_ADD_RELEASE = \"/collectionMy/release/add/ {} \" # collectionId # POST COLLECTION_COMMENTS_PROCESS = \"/collection/comment/process/ {} \" # commentId COLLECTION_COMMENTS_REPORT = \"/collection/comment/report/ {} \" # commentId COLLECTION_REPORT = \"/collection/report/ {} \" # collectionId COLLECTION_MY_CREATE = \"/collectionMy/create\" COLLECTION_MY_EDIT = \"/collectionMy/edit/ {} \" # collectionId COLLECTION_MY_EDIT_IMAGE = \"/collectionMy/editImage/ {} \" # collectionId ############# RELEASE ############# # GET RELEASE = \"/release/ {} \" # release id RELEASE_VOTE_ADD = \"/release/vote/add/ {} / {} \" # release id / mark 1-5 RELEASE_VOTE_DELETE = \"/release/vote/delete/ {} \" # release id RELEASE_RANDOM = \"/release/random\" RELEASE_COMMENTS = \"/release/comment/all/ {} / {} \" # release id / page RELEASE_COMMENTS_VOTE = \"/release/comment/vote/ {} / {} \" # release comment id / mark (1, 2) RELEASE_COMMENTS_VOTES = \"/release/comment/votes/ {} / {} \" # release comment id / page RELEASE_COMMENTS_REPLIES = \"/release/comment/replies/ {} / {} \" # release comment id / page RELEASE_COMMENTS_DELETE = \"/release/comment/delete/ {} \" # release comment id # POST RELEASE_COMMENTS_ADD = \"/release/comment/add/ {} \" # release id RELEASE_COMMENTS_EDIT = \"/release/comment/edit/ {} \" # release comment id # Not Cheked # GET RELEASE_COMMENTS_REPORT = \"/release/comment/report/ {} \" # commentId RELEASE_COMMENTS_PROCESS = \"/release/comment/process/ {} \" # commentId RELEASE_PROFILE_COMMENTS = \"/release/comment/all/profile/ {} / {} \" # p_id/page RELEASE_STREAMING_PLATFORM = \"/release/streaming/platform/ {} /\" # releaseId # POST RELEASE_REPORT = \"/release/report/ {} \" # r_id ############# OTHER ############# # TODO OTHER: EXPORT_BOOKMARKS, IMPORT_BOOKMARKS, CAN_IMPORT_BOOKMARKS # GET TYPE = \"/type/all\" TYPE_RELEASE = \"/type/ {} \" # r_id TOGGLES = \"/config/toggles?version_code= {} &is_beta= {} \" # version_code: int, is_beta: bool SCHEDULE = \"/schedule\" # POST EXPORT_BOOKMARKS = \"/export/bookmarks\" # {\"bookmarksExportProfileLists\":[0 - favorite, + all in AnixList]} IMPORT_BOOKMARKS = \"/import/bookmarks\" # {\"completed\":[],\"dropped\":[],\"holdOn\":[],\"plans\":[],\"watching\":[],\"selected_importer_name\":\"Shikimori\"} CAN_IMPORT_BOOKMARKS = \"/import/status\" # code: 0 - Yes, code: 2 - no # Not Checked # GET FILTER = \"/filter/ {} \" # page {token, genres: [], studio, category, status, year, episodes, sort, country, season, duration, ratings: [], extended_mode: bool} RELATED = \"related/ {} / {} \" # relatedId/page # POST VIDEO_PARSE = \"/video/parse\" ############# SEARCH ############# # TODO SEARCH: * # { \"query\": text, \"searchBy\": 0} # POST SEARCH_COLLECTION = \"/search/collections/ {} \" # page SEARCH_RELEASE = \"/search/releases/ {} \" # page SEARCH_FAVORITE = \"/search/favorites/ {} \" # page SEARCH_COLLECTION_FAVORITE = \"/search/favoriteCollections/ {} \" # page SEARCH_LIST = \"/search/profile/list/ {} / {} \" # list id / page SEARCH_PROFILE = \"/search/profiles/ {} \" # page SEARCH_HISTORY = \"/search/history/ {} \" # page # SEARCH_COLLECTION_PROFILE = \"/search/profileCollections/ {} / {} \" # p_id/page ############# NOTIFICATIONS ############# # TODO NOTIFICATIONS: * # GET NOTIFICATION_READ = \"/notification/read\" NOTIFICATION_COUNT = \"/notification/count\" NOTIFICATION_COLLECTION_COMMENTS = \"/notification/collectionComments/ {} \" # page NOTIFICATION_MY_COLLECTION_COMMENTS = \"/notification/my/collection/comments/ {} \" # page NOTIFICATION_RELEASE_COMMENTS = \"/notification/releaseComments/ {} \" # page NOTIFICATION_EPISODES = \"/notification/episodes/ {} \" # page NOTIFICATION_FRIEND = \"/notification/friends/ {} \" # page NOTIFICATION_COLLECTION_COMMENTS_DELETE = \"/notification/collectionComment/delete/ {} \" # n_id NOTIFICATION_MY_COLLECTION_COMMENTS_DELETE = \"/notification/my/collection/comment/delete/ {} \" # page NOTIFICATION_RELEASE_COMMENTS_DELETE = \"/notification/releaseComment/delete/ {} \" # page NOTIFICATION_EPISODES_DELETE = \"/notification/episode/delete/ {} \" # page NOTIFICATION_FRIEND_DELETE = \"/notification/friends/delete/ {} \" # page ############# DISCOVER ############# # TODO DISCOVER: * # Not Cheked # POST DISCOVER_COMMENTS = \"/discover/comments\" DISCOVER_DISCUSSING = \"/discover/discussing\" # {token} DISCOVER_INTERESTING = \"/discover/interesting\" DISCOVER_RECOMENDATION = \"/discover/recommendations/ {} \" # page DISCOVER_WATCING = \"/discover/watching/ {} \" # page ############# EpisodeApi.kt ############# # TODO EpisodeApi.kt: * # \u041e\u0439, \u044f \u0437\u0430\u0435\u0431\u0430\u043b\u0441\u044f, \u044f \u0441\u043f\u0430\u0442\u044c.. # \u0417\u0434\u0435\u0441\u044c \u043c\u0435\u0442\u043e\u0434\u044b \u0438\u0437 com.swiftsoft.anixartd.network.api.EpisodeApi # \u0415\u0441\u043b\u0438 \u043d\u0430\u0434\u043e, \u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u0439 \u0442\u0430\u043a \u043a\u0430\u043a \u0442\u0435\u0431\u0435 \u043d\u0430\u0434\u043e # Not Checked # GET # @GET(\"episode/target/{releaseId}/{sourceId}/{position}\") # @GET(\"episode/{releaseId}/{typeId}/{sourceId}\") # @GET(\"episode/{releaseId}\") # @GET(\"episode/updates/{releaseId}/{page}\") # POST # @POST(\"episode/report/{releaseId}/{sourceId}/{position}\") # @POST(\"episode/unwatch/{releaseId}/{sourceId}/{position}\") # @POST(\"episode/unwatch/{releaseId}/{sourceId}\") # @POST(\"episode/watch/{releaseId}/{sourceId}/{position}\") # @POST(\"episode/watch/{releaseId}/{sourceId}\") ############# FAVORITE ############# # TODO FAVORITE: * # Not Checked # GET FAVORITE = \"/favorite/all/ {} \" # r_id FAVORITE_ADD = \"/favorite/add/ {} \" # r_id FAVORITE_DELETE = \"/favorite/delete/ {} \" # r_id {sort} ############# HISTORY ############# # TODO HISTORY: * # GET HISTORY = \"/history/ {} \" # page # Not Checked # GET HISTORY_ADD = \"/history/add/ {} / {} / {} \" # r_id/s_id/position HISTORY_DELETE = \"/history/delete/ {} \" # r_id","title":"endpoints.py"},{"location":"anixApi/auth/","text":"Anixart Auth methods \u041a\u043b\u0430\u0441\u0441 \u0435\u0449\u0451 \u043d\u0435 \u043e\u043f\u0438\u0441\u0430\u043d! \u041e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 /auth/signUp , \u0414\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430. /auth/verify , \u0414\u043b\u044f \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430. /auth/signIn , \u0414\u043b\u044f \u0432\u0445\u043e\u0434\u0430 \u0432 \u0430\u043a\u043a\u0430\u0443\u043d\u0442. /auth/firebase , \u0414\u043b\u044f <_err_found_data> Endpoints ################ AUTH ################ # POST SING_UP = \"/auth/signUp\" SING_UP_VERIFY = \"/auth/verify\" SING_IN = \"/auth/signIn\" FIREBASE = \"/auth/firebase\" Auth /auth/signUp \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430. \u041f\u043e\u0441\u043b\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430 \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u043f\u043e\u0447\u0442\u0443 \u043c\u0435\u0442\u043e\u0434\u043e\u043c /auth/verify . \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: POST \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: Data - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: login: str password: str email: str \u041f\u0440\u0438\u043c\u0435\u0440: POST {API_URL}/auth/signUp} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"hash\" : \"hash string\" , \"codeTimestampExpires\" : 1642752174 } /auth/verify \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: POST \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: Data - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: code: int , \u043a\u043e\u0434, \u043f\u043e\u0441\u0442\u0443\u043f\u0438\u0432\u0448\u0438\u0439 \u043d\u0430 \u043f\u043e\u0447\u0442\u0443. login: str password: str email: str hash: str , \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u0442\u0441\u044f \u0432 \u043e\u0442\u0432\u0435\u0442\u0435 \u043e\u0442 /auth/signUp \u041f\u0440\u0438\u043c\u0435\u0440: POST {API_URL}/auth/signUp} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"profile\" : { \"id\" : 1234567 , \"login\" : \"login string\" , \"avatar\" : \"https://static.anixart.tv/avatars/no_avatar.jpg\" , \"status\" : \"\" , \"sponsorshipExpires\" : 0 , \"history\" : [], \"votes\" : [], \"last_activity_time\" : 0 , \"register_date\" : 1234567890 , \"vk_page\" : \"\" , \"tg_page\" : \"\" , \"inst_page\" : \"\" , \"tt_page\" : \"\" , \"ban_expires\" : 0 , \"ban_reason\" : null , \"ban_note\" : null , \"privilege_level\" : 0 , \"watching_count\" : 0 , \"plan_count\" : 0 , \"completed_count\" : 0 , \"hold_on_count\" : 0 , \"dropped_count\" : 0 , \"favorite_count\" : 0 , \"comment_count\" : 0 , \"collection_count\" : 0 , \"friend_count\" : 0 , \"is_private\" : false , \"is_sponsor\" : false , \"is_banned\" : false , \"is_perm_banned\" : false , \"is_bookmarks_transferred\" : false , \"is_sponsor_transferred\" : false , \"is_vk_bound\" : false , \"is_google_bound\" : false , \"is_episode_notifications_enabled\" : false , \"is_first_episode_notification_enabled\" : false , \"is_comment_notifications_enabled\" : false , \"is_my_collection_comment_notifications_enabled\" : false , \"is_verified\" : false , \"watch_dynamics\" : [], \"friend_status\" : null , \"rating_score\" : 0 , \"is_blocked\" : false , \"is_me_blocked\" : false , \"is_stats_hidden\" : false , \"is_counts_hidden\" : false , \"is_social_hidden\" : false , \"is_friend_requests_disallowed\" : false , \"is_online\" : false , \"roles\" : [] }, \"profileToken\" : { \"id\" : 1234567 , \"token\" : \"token sting\" } } /auth/signIn \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430 \u0432 \u0430\u043a\u043a\u0430\u0443\u043d\u0442. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: POST \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: Data - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: login: str password: str \u041f\u0440\u0438\u043c\u0435\u0440: POST {API_URL}/auth/signIn} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"profile\" : { \"id\" : \"login string\" , \"login\" : \"st\" , \"avatar\" : \"https://static.anixart.tv/avatars/no_avatar.jpg\" , \"status\" : \"\" , \"sponsorshipExpires\" : 0 , \"history\" : [], \"votes\" : [], \"last_activity_time\" : 1642756487 , \"register_date\" : 1642752760 , ... }, \"profileToken\" : { \"id\" : 1234567 , \"token\" : \"token sting\" } } /auth/firebase \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f <_err_found_data> \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: POST \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: Data - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: token: str \u041f\u0440\u0438\u043c\u0435\u0440: POST {API_URL}/auth/firebase} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"topicName\" : \"<_err_found_data> string\" } \u0418\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u0439 \u0444\u0430\u043a\u0442, \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u0441\u043b\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u0440\u0430\u0437\u0443 \u0436\u0435 \u043f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 /auth/firebase. \u0410 \u043f\u0440\u0438 \u043f\u0435\u0440\u0432\u043e\u043c \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0438: POST /v1/projects/anime-ad-eb8b3/installations HTTP/1.1 Host: firebaseinstallations.googleapis.com Content-Type: application/json Accept: application/json Content-Encoding: gzip Cache-Control: no-cache X-Android-Package: com.swiftsoft.anixartd x-firebase-client: kotlin/1.5.10 android-target-sdk/30 device-brand/samsung fire-fst/22.1.2 fire-core/19.5.0 device-name/b70abab fire-iid/21.1.0 device-model/a70q fire-android/30 android-installer/com.google.android.packageinstaller android-min-sdk/21 fire-fcm/20.1.7_1p android-platform/ fire-installations/16.3.5 fire-auth/20.0.4 x-firebase-client-log-type: 3 X-Android-Cert: 61ED377E85D386A8DFEE6B864BD85B0BFAA5AF81 x-goog-api-key: AIzaSyBFPckWOsp0MEqb_1gwszvM1ILdUixM-uw User-Agent: Dalvik/2.1.0 (Linux; U; Android 10; SM-A705FN Build/10) Connection: Keep-Alive Accept-Encoding: gzip Content-Length: 140 { \"fid\": \"dsVzIpPOQE-2lGUlSee_DX\", \"appId\": \"1:983926366374:android:86c070d43af9c4cd0b5467\", \"authVersion\": \"FIS_v2\", \"sdkVersion\": \"a:16.3.5\" }","title":"Auth"},{"location":"anixApi/auth/#anixart-auth-methods","text":"","title":"Anixart Auth methods"},{"location":"anixApi/auth/#_1","text":"","title":"\u041a\u043b\u0430\u0441\u0441 \u0435\u0449\u0451 \u043d\u0435 \u043e\u043f\u0438\u0441\u0430\u043d!"},{"location":"anixApi/auth/#_2","text":"/auth/signUp , \u0414\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430. /auth/verify , \u0414\u043b\u044f \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430. /auth/signIn , \u0414\u043b\u044f \u0432\u0445\u043e\u0434\u0430 \u0432 \u0430\u043a\u043a\u0430\u0443\u043d\u0442. /auth/firebase , \u0414\u043b\u044f <_err_found_data>","title":"\u041e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430"},{"location":"anixApi/auth/#endpoints","text":"################ AUTH ################ # POST SING_UP = \"/auth/signUp\" SING_UP_VERIFY = \"/auth/verify\" SING_IN = \"/auth/signIn\" FIREBASE = \"/auth/firebase\"","title":"Endpoints"},{"location":"anixApi/auth/#auth","text":"","title":"Auth"},{"location":"anixApi/auth/#authsignup","text":"\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430. \u041f\u043e\u0441\u043b\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430 \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u043f\u043e\u0447\u0442\u0443 \u043c\u0435\u0442\u043e\u0434\u043e\u043c /auth/verify . \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: POST \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: Data - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: login: str password: str email: str \u041f\u0440\u0438\u043c\u0435\u0440: POST {API_URL}/auth/signUp} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"hash\" : \"hash string\" , \"codeTimestampExpires\" : 1642752174 }","title":"/auth/signUp"},{"location":"anixApi/auth/#authverify","text":"\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: POST \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: Data - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: code: int , \u043a\u043e\u0434, \u043f\u043e\u0441\u0442\u0443\u043f\u0438\u0432\u0448\u0438\u0439 \u043d\u0430 \u043f\u043e\u0447\u0442\u0443. login: str password: str email: str hash: str , \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u0442\u0441\u044f \u0432 \u043e\u0442\u0432\u0435\u0442\u0435 \u043e\u0442 /auth/signUp \u041f\u0440\u0438\u043c\u0435\u0440: POST {API_URL}/auth/signUp} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"profile\" : { \"id\" : 1234567 , \"login\" : \"login string\" , \"avatar\" : \"https://static.anixart.tv/avatars/no_avatar.jpg\" , \"status\" : \"\" , \"sponsorshipExpires\" : 0 , \"history\" : [], \"votes\" : [], \"last_activity_time\" : 0 , \"register_date\" : 1234567890 , \"vk_page\" : \"\" , \"tg_page\" : \"\" , \"inst_page\" : \"\" , \"tt_page\" : \"\" , \"ban_expires\" : 0 , \"ban_reason\" : null , \"ban_note\" : null , \"privilege_level\" : 0 , \"watching_count\" : 0 , \"plan_count\" : 0 , \"completed_count\" : 0 , \"hold_on_count\" : 0 , \"dropped_count\" : 0 , \"favorite_count\" : 0 , \"comment_count\" : 0 , \"collection_count\" : 0 , \"friend_count\" : 0 , \"is_private\" : false , \"is_sponsor\" : false , \"is_banned\" : false , \"is_perm_banned\" : false , \"is_bookmarks_transferred\" : false , \"is_sponsor_transferred\" : false , \"is_vk_bound\" : false , \"is_google_bound\" : false , \"is_episode_notifications_enabled\" : false , \"is_first_episode_notification_enabled\" : false , \"is_comment_notifications_enabled\" : false , \"is_my_collection_comment_notifications_enabled\" : false , \"is_verified\" : false , \"watch_dynamics\" : [], \"friend_status\" : null , \"rating_score\" : 0 , \"is_blocked\" : false , \"is_me_blocked\" : false , \"is_stats_hidden\" : false , \"is_counts_hidden\" : false , \"is_social_hidden\" : false , \"is_friend_requests_disallowed\" : false , \"is_online\" : false , \"roles\" : [] }, \"profileToken\" : { \"id\" : 1234567 , \"token\" : \"token sting\" } }","title":"/auth/verify"},{"location":"anixApi/auth/#authsignin","text":"\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430 \u0432 \u0430\u043a\u043a\u0430\u0443\u043d\u0442. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: POST \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: Data - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: login: str password: str \u041f\u0440\u0438\u043c\u0435\u0440: POST {API_URL}/auth/signIn} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"profile\" : { \"id\" : \"login string\" , \"login\" : \"st\" , \"avatar\" : \"https://static.anixart.tv/avatars/no_avatar.jpg\" , \"status\" : \"\" , \"sponsorshipExpires\" : 0 , \"history\" : [], \"votes\" : [], \"last_activity_time\" : 1642756487 , \"register_date\" : 1642752760 , ... }, \"profileToken\" : { \"id\" : 1234567 , \"token\" : \"token sting\" } }","title":"/auth/signIn"},{"location":"anixApi/auth/#authfirebase","text":"\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f <_err_found_data> \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: POST \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: Data - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: token: str \u041f\u0440\u0438\u043c\u0435\u0440: POST {API_URL}/auth/firebase} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"topicName\" : \"<_err_found_data> string\" } \u0418\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u0439 \u0444\u0430\u043a\u0442, \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u0441\u043b\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u0440\u0430\u0437\u0443 \u0436\u0435 \u043f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 /auth/firebase. \u0410 \u043f\u0440\u0438 \u043f\u0435\u0440\u0432\u043e\u043c \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0438: POST /v1/projects/anime-ad-eb8b3/installations HTTP/1.1 Host: firebaseinstallations.googleapis.com Content-Type: application/json Accept: application/json Content-Encoding: gzip Cache-Control: no-cache X-Android-Package: com.swiftsoft.anixartd x-firebase-client: kotlin/1.5.10 android-target-sdk/30 device-brand/samsung fire-fst/22.1.2 fire-core/19.5.0 device-name/b70abab fire-iid/21.1.0 device-model/a70q fire-android/30 android-installer/com.google.android.packageinstaller android-min-sdk/21 fire-fcm/20.1.7_1p android-platform/ fire-installations/16.3.5 fire-auth/20.0.4 x-firebase-client-log-type: 3 X-Android-Cert: 61ED377E85D386A8DFEE6B864BD85B0BFAA5AF81 x-goog-api-key: AIzaSyBFPckWOsp0MEqb_1gwszvM1ILdUixM-uw User-Agent: Dalvik/2.1.0 (Linux; U; Android 10; SM-A705FN Build/10) Connection: Keep-Alive Accept-Encoding: gzip Content-Length: 140 { \"fid\": \"dsVzIpPOQE-2lGUlSee_DX\", \"appId\": \"1:983926366374:android:86c070d43af9c4cd0b5467\", \"authVersion\": \"FIS_v2\", \"sdkVersion\": \"a:16.3.5\" }","title":"/auth/firebase"},{"location":"anixApi/collections/","text":"Anixart Collection methods \u041a\u043b\u0430\u0441\u0441 \u0435\u0449\u0451 \u043d\u0435 \u043e\u043f\u0438\u0441\u0430\u043d! \u041e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 Endpoints","title":"Collections"},{"location":"anixApi/collections/#anixart-collection-methods","text":"","title":"Anixart Collection methods"},{"location":"anixApi/collections/#_1","text":"","title":"\u041a\u043b\u0430\u0441\u0441 \u0435\u0449\u0451 \u043d\u0435 \u043e\u043f\u0438\u0441\u0430\u043d!"},{"location":"anixApi/collections/#_2","text":"","title":"\u041e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430"},{"location":"anixApi/collections/#endpoints","text":"","title":"Endpoints"},{"location":"anixApi/other/","text":"Anixart Other methods \u041e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 Type: /type/all - \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043e\u0437\u0432\u0443\u0447\u0435\u043a. Endpoints ############# OTHER ############# # GET VOICE = \"/type/all\" Type /type/all \u041c\u0435\u0442\u043e\u0434 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043e\u0437\u0432\u0443\u0447\u0435\u043a. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: Payload - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: token: str \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/type/all?token={token} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"types\" : [ { \"@id\" : 1 , \"id\" : 1 , \"name\" : \"AniDub\" , \"workers\" : \"\" , \"episodes_count\" : 0 , \"view_count\" : 0 }, ... ] }","title":"Other"},{"location":"anixApi/other/#anixart-other-methods","text":"","title":"Anixart Other methods"},{"location":"anixApi/other/#_1","text":"Type: /type/all - \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043e\u0437\u0432\u0443\u0447\u0435\u043a.","title":"\u041e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430"},{"location":"anixApi/other/#endpoints","text":"############# OTHER ############# # GET VOICE = \"/type/all\"","title":"Endpoints"},{"location":"anixApi/other/#type","text":"","title":"Type"},{"location":"anixApi/other/#typeall","text":"\u041c\u0435\u0442\u043e\u0434 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043e\u0437\u0432\u0443\u0447\u0435\u043a. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: Payload - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: token: str \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/type/all?token={token} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"types\" : [ { \"@id\" : 1 , \"id\" : 1 , \"name\" : \"AniDub\" , \"workers\" : \"\" , \"episodes_count\" : 0 , \"view_count\" : 0 }, ... ] }","title":"/type/all"},{"location":"anixApi/profile/","text":"Anixart Profile methods \u041e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 \u041f\u0440\u043e\u0444\u0438\u043b\u044c: /profile - \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0438\u043b\u044f \u043f\u043e User ID. /profile/login/history/all - \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u043d\u0438\u043a\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0427\u0451\u0440\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a: /profile/blocklist/all - \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 c\u043f\u0438\u0441\u043a\u0430 \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0432\u0430\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. /profile/blocklist/add - \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432 \u0447\u0451\u0440\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a. /profile/blocklist/remove - \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0438\u0437 \u0447\u0451\u0440\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430. \u0414\u0440\u0443\u0437\u044c\u044f: /profile/friend/all /profile/friend/requests/in/last /profile/friend/requests/out/last /profile/friend/request/send /profile/friend/request/remove} \u0413\u043e\u043b\u043e\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430 \u0440\u0435\u043b\u0438\u0437\u044b: \u041a\u0430\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c sort /profile/vote/release/voted - \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 c\u043f\u0438\u0441\u043a\u0430 \u043e\u0446\u0435\u043d\u0451\u043d\u043d\u044b\u0445 \u0440\u0435\u043b\u0438\u0437\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c /profile/vote/release/unvoted - \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 c\u043f\u0438\u0441\u043a\u0430 \u0441\u0432\u043e\u0438\u0445 \u043d\u0435 \u043e\u0446\u0435\u043d\u0451\u043d\u043d\u044b\u0445 \u0440\u0435\u043b\u0438\u0437\u043e\u0432 \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0438\u043b\u044f: /profile/preference/status/edit /profile/preference/social/edit /profile/preference/avatar/edit /profile/preference/password/change Endpoints # GET PROFILE = \"/profile/ {user_id} \" PROFILE_NICK_HISTORY = \"/profile/login/history/all/ {user_id} / {page} \" PROFILE_BLACKLIST = \"/profile/blocklist/all/ {page} \" PROFILE_BLACKLIST_ADD = \"/profile/blocklist/add/ {user_id} \" PROFILE_BLACKLIST_REMOVE = \"/profile/blocklist/remove/ {user_id} \" FRIENDS = \"/profile/friend/all/ {user_id} / {page} \" # TODO FRIENDS_RQ_IN = \"/profile/friend/requests/in/last\" # TODO FRIENDS_RQ_OUT = \"/profile/friend/requests/out/last\" # TODO FRIENDS_SEND = \"/profile/friend/request/send/ {user_id} \" # TODO # FRIENDS_REMOVE = \"/profile/friend/request/remove/{user_id}\" # TODO VOTE_VOTED = \"/profile/vote/release/voted/ {} / {} \" # profile id / page VOTE_UNVOTED = \"/profile/vote/release/unvoted/ {} \" # page EDIT_PASSWORD = \"/profile/preference/password/change\" # TODO # POST EDIT_STATUS = \"/profile/preference/status/edit\" # TODO EDIT_SOCIAL = \"/profile/preference/social/edit\" # TODO EDIT_AVATAR = \"/profile/preference/avatar/edit\" # TODO Profile info /profile \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u0440\u043e\u0444\u0438\u043b\u044c \u043f\u043e User ID \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: patch - \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. User ID: int \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/profile/{User ID} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"profile\" : { \"id\" : 1 , \"login\" : \"Anixart\" , \"avatar\" : \"https://i.imgur.com/YPrxlVv.jpg\" , \"status\" : \"\u041e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\" , \"sponsorshipExpires\" : 0 , \"history\" : [], \"votes\" : [], \"last_activity_time\" : 0 , \"register_date\" : 0 , \"vk_page\" : \"\" , \"tg_page\" : \"\" , \"inst_page\" : \"\" , \"tt_page\" : \"\" , \"ban_expires\" : 0 , \"ban_reason\" : null , \"ban_note\" : null , \"privilege_level\" : 1 , \"watching_count\" : 0 , \"plan_count\" : 0 , \"completed_count\" : 0 , \"hold_on_count\" : 0 , \"dropped_count\" : 0 , \"favorite_count\" : 0 , \"comment_count\" : 0 , \"collection_count\" : 0 , \"friend_count\" : 0 , \"is_private\" : false , \"is_sponsor\" : false , \"is_banned\" : false , \"is_perm_banned\" : false , \"is_bookmarks_transferred\" : false , \"is_sponsor_transferred\" : false , \"is_vk_bound\" : false , \"is_google_bound\" : false , \"is_episode_notifications_enabled\" : false , \"is_first_episode_notification_enabled\" : false , \"is_comment_notifications_enabled\" : false , \"is_my_collection_comment_notifications_enabled\" : false , \"is_verified\" : true , \"watch_dynamics\" : [], \"friend_status\" : null , \"rating_score\" : 99 , \"is_blocked\" : false , \"is_me_blocked\" : false , \"is_stats_hidden\" : true , \"is_counts_hidden\" : true , \"is_social_hidden\" : true , \"is_friend_requests_disallowed\" : true , \"is_online\" : false , \"roles\" : [] }, \"is_my_profile\" : false } /profile/login/history/all \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u043d\u0438\u043a\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: patch - \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. User ID: int Page: int \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/profile/login/history/all{User ID}/{Page} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"content\" : [ { \"@id\" : 1 , \"id\" : 177984 , \"newLogin\" : \"New login\" , \"timestamp\" : 1624562531 }, { \"@id\" : 2 , \"id\" : 177983 , \"newLogin\" : \"Register login\" , \"timestamp\" : 0 } ], \"total_count\" : 2 , \"total_page_count\" : 0 , \"current_page\" : 0 } Blacklist /profile/blocklist/all \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f c\u043f\u0438\u0441\u043a\u0430 \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0432\u0430\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: patch - \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. Page: int params - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: token: str \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/profile/blocklist/all/{Page}?token={token} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"content\" : [ { \"login\" : \"login\" , \"avatar\" : \"https://static.anixart.tv/avatars/file.jpg\" , \"id\" : 1 , \"added_date\" : 1642683977 , \"is_verified\" : false , \"is_online\" : false , \"is_sponsor\" : false } ], \"total_count\" : 1 , \"total_page_count\" : 0 , \"current_page\" : 0 } /profile/blocklist/add \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0447\u0451\u0440\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e User ID. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: patch - \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. User ID: int params - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: token: str \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/profile/blocklist/add/{User ID}?token={token} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 } /profile/blocklist/remove \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0447\u0451\u0440\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e User ID. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: patch - \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. User ID: int params - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: token: str \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/profile/blocklist/remove/{User ID}?token={token} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 } Friends Vote \u041a\u0430\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c sort 1 -> \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 2 -> \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u0430\u0440\u044b\u0435 3 -> 5 \u0417\u0432\u0451\u0437\u0434 4 -> 4 \u0417\u0432\u0451\u0437\u0434\u044b 5 -> 3 \u0417\u0432\u0451\u0437\u0434\u044b 6 -> 2 \u0417\u0432\u0451\u0437\u0434\u044b 7 -> 1 \u0417\u0432\u0435\u0437\u0434\u0430 /profile/vote/release/voted \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f c\u043f\u0438\u0441\u043a\u0430 \u043e\u0446\u0435\u043d\u0451\u043d\u043d\u044b\u0445 \u0440\u0435\u043b\u0438\u0437\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: patch - \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. Page: int params - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: token: str sort: int , \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/profile/vote/release/voted/{User ID}/{Page}?sort={sort}&token={token} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: /profile/vote/release/unvoted \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f c\u043f\u0438\u0441\u043a\u0430 \u0441\u0432\u043e\u0438\u0445 \u043d\u0435 \u043e\u0446\u0435\u043d\u0451\u043d\u043d\u044b\u0445 \u0440\u0435\u043b\u0438\u0437\u043e\u0432. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: patch - \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. Page: int params - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: token: str sort: int , \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/profile/vote/release/unvoted/{Page}??sort={sort}&token={token} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: Preference","title":"Profile"},{"location":"anixApi/profile/#anixart-profile-methods","text":"","title":"Anixart Profile methods"},{"location":"anixApi/profile/#_1","text":"\u041f\u0440\u043e\u0444\u0438\u043b\u044c: /profile - \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0438\u043b\u044f \u043f\u043e User ID. /profile/login/history/all - \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u043d\u0438\u043a\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0427\u0451\u0440\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a: /profile/blocklist/all - \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 c\u043f\u0438\u0441\u043a\u0430 \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0432\u0430\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. /profile/blocklist/add - \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432 \u0447\u0451\u0440\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a. /profile/blocklist/remove - \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0438\u0437 \u0447\u0451\u0440\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430. \u0414\u0440\u0443\u0437\u044c\u044f: /profile/friend/all /profile/friend/requests/in/last /profile/friend/requests/out/last /profile/friend/request/send /profile/friend/request/remove} \u0413\u043e\u043b\u043e\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430 \u0440\u0435\u043b\u0438\u0437\u044b: \u041a\u0430\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c sort /profile/vote/release/voted - \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 c\u043f\u0438\u0441\u043a\u0430 \u043e\u0446\u0435\u043d\u0451\u043d\u043d\u044b\u0445 \u0440\u0435\u043b\u0438\u0437\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c /profile/vote/release/unvoted - \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 c\u043f\u0438\u0441\u043a\u0430 \u0441\u0432\u043e\u0438\u0445 \u043d\u0435 \u043e\u0446\u0435\u043d\u0451\u043d\u043d\u044b\u0445 \u0440\u0435\u043b\u0438\u0437\u043e\u0432 \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0438\u043b\u044f: /profile/preference/status/edit /profile/preference/social/edit /profile/preference/avatar/edit /profile/preference/password/change","title":"\u041e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430"},{"location":"anixApi/profile/#endpoints","text":"# GET PROFILE = \"/profile/ {user_id} \" PROFILE_NICK_HISTORY = \"/profile/login/history/all/ {user_id} / {page} \" PROFILE_BLACKLIST = \"/profile/blocklist/all/ {page} \" PROFILE_BLACKLIST_ADD = \"/profile/blocklist/add/ {user_id} \" PROFILE_BLACKLIST_REMOVE = \"/profile/blocklist/remove/ {user_id} \" FRIENDS = \"/profile/friend/all/ {user_id} / {page} \" # TODO FRIENDS_RQ_IN = \"/profile/friend/requests/in/last\" # TODO FRIENDS_RQ_OUT = \"/profile/friend/requests/out/last\" # TODO FRIENDS_SEND = \"/profile/friend/request/send/ {user_id} \" # TODO # FRIENDS_REMOVE = \"/profile/friend/request/remove/{user_id}\" # TODO VOTE_VOTED = \"/profile/vote/release/voted/ {} / {} \" # profile id / page VOTE_UNVOTED = \"/profile/vote/release/unvoted/ {} \" # page EDIT_PASSWORD = \"/profile/preference/password/change\" # TODO # POST EDIT_STATUS = \"/profile/preference/status/edit\" # TODO EDIT_SOCIAL = \"/profile/preference/social/edit\" # TODO EDIT_AVATAR = \"/profile/preference/avatar/edit\" # TODO","title":"Endpoints"},{"location":"anixApi/profile/#profile-info","text":"","title":"Profile info"},{"location":"anixApi/profile/#profile","text":"\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u0440\u043e\u0444\u0438\u043b\u044c \u043f\u043e User ID \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: patch - \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. User ID: int \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/profile/{User ID} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"profile\" : { \"id\" : 1 , \"login\" : \"Anixart\" , \"avatar\" : \"https://i.imgur.com/YPrxlVv.jpg\" , \"status\" : \"\u041e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\" , \"sponsorshipExpires\" : 0 , \"history\" : [], \"votes\" : [], \"last_activity_time\" : 0 , \"register_date\" : 0 , \"vk_page\" : \"\" , \"tg_page\" : \"\" , \"inst_page\" : \"\" , \"tt_page\" : \"\" , \"ban_expires\" : 0 , \"ban_reason\" : null , \"ban_note\" : null , \"privilege_level\" : 1 , \"watching_count\" : 0 , \"plan_count\" : 0 , \"completed_count\" : 0 , \"hold_on_count\" : 0 , \"dropped_count\" : 0 , \"favorite_count\" : 0 , \"comment_count\" : 0 , \"collection_count\" : 0 , \"friend_count\" : 0 , \"is_private\" : false , \"is_sponsor\" : false , \"is_banned\" : false , \"is_perm_banned\" : false , \"is_bookmarks_transferred\" : false , \"is_sponsor_transferred\" : false , \"is_vk_bound\" : false , \"is_google_bound\" : false , \"is_episode_notifications_enabled\" : false , \"is_first_episode_notification_enabled\" : false , \"is_comment_notifications_enabled\" : false , \"is_my_collection_comment_notifications_enabled\" : false , \"is_verified\" : true , \"watch_dynamics\" : [], \"friend_status\" : null , \"rating_score\" : 99 , \"is_blocked\" : false , \"is_me_blocked\" : false , \"is_stats_hidden\" : true , \"is_counts_hidden\" : true , \"is_social_hidden\" : true , \"is_friend_requests_disallowed\" : true , \"is_online\" : false , \"roles\" : [] }, \"is_my_profile\" : false }","title":"/profile"},{"location":"anixApi/profile/#profileloginhistoryall","text":"\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u043d\u0438\u043a\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: patch - \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. User ID: int Page: int \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/profile/login/history/all{User ID}/{Page} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"content\" : [ { \"@id\" : 1 , \"id\" : 177984 , \"newLogin\" : \"New login\" , \"timestamp\" : 1624562531 }, { \"@id\" : 2 , \"id\" : 177983 , \"newLogin\" : \"Register login\" , \"timestamp\" : 0 } ], \"total_count\" : 2 , \"total_page_count\" : 0 , \"current_page\" : 0 }","title":"/profile/login/history/all"},{"location":"anixApi/profile/#blacklist","text":"","title":"Blacklist"},{"location":"anixApi/profile/#profileblocklistall","text":"\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f c\u043f\u0438\u0441\u043a\u0430 \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0432\u0430\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: patch - \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. Page: int params - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: token: str \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/profile/blocklist/all/{Page}?token={token} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 , \"content\" : [ { \"login\" : \"login\" , \"avatar\" : \"https://static.anixart.tv/avatars/file.jpg\" , \"id\" : 1 , \"added_date\" : 1642683977 , \"is_verified\" : false , \"is_online\" : false , \"is_sponsor\" : false } ], \"total_count\" : 1 , \"total_page_count\" : 0 , \"current_page\" : 0 }","title":"/profile/blocklist/all"},{"location":"anixApi/profile/#profileblocklistadd","text":"\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0447\u0451\u0440\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e User ID. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: patch - \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. User ID: int params - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: token: str \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/profile/blocklist/add/{User ID}?token={token} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 }","title":"/profile/blocklist/add"},{"location":"anixApi/profile/#profileblocklistremove","text":"\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0447\u0451\u0440\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e User ID. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: patch - \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. User ID: int params - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: token: str \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/profile/blocklist/remove/{User ID}?token={token} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res: { \"code\" : 0 }","title":"/profile/blocklist/remove"},{"location":"anixApi/profile/#friends","text":"","title":"Friends"},{"location":"anixApi/profile/#vote","text":"","title":"Vote"},{"location":"anixApi/profile/#sort","text":"1 -> \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 2 -> \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u0430\u0440\u044b\u0435 3 -> 5 \u0417\u0432\u0451\u0437\u0434 4 -> 4 \u0417\u0432\u0451\u0437\u0434\u044b 5 -> 3 \u0417\u0432\u0451\u0437\u0434\u044b 6 -> 2 \u0417\u0432\u0451\u0437\u0434\u044b 7 -> 1 \u0417\u0432\u0435\u0437\u0434\u0430","title":"\u041a\u0430\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c sort"},{"location":"anixApi/profile/#profilevotereleasevoted","text":"\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f c\u043f\u0438\u0441\u043a\u0430 \u043e\u0446\u0435\u043d\u0451\u043d\u043d\u044b\u0445 \u0440\u0435\u043b\u0438\u0437\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: patch - \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. Page: int params - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: token: str sort: int , \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/profile/vote/release/voted/{User ID}/{Page}?sort={sort}&token={token} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res:","title":"/profile/vote/release/voted"},{"location":"anixApi/profile/#profilevotereleaseunvoted","text":"\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f c\u043f\u0438\u0441\u043a\u0430 \u0441\u0432\u043e\u0438\u0445 \u043d\u0435 \u043e\u0446\u0435\u043d\u0451\u043d\u043d\u044b\u0445 \u0440\u0435\u043b\u0438\u0437\u043e\u0432. \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: GET \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e: patch - \u0441\u0442\u0440\u043e\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. Page: int params - \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: token: str sort: int , \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 \u041f\u0440\u0438\u043c\u0435\u0440: GET {API_URL}/profile/vote/release/unvoted/{Page}??sort={sort}&token={token} \u041e\u0442\u0432\u0435\u0442: \u0422\u0438\u043f: json Res:","title":"/profile/vote/release/unvoted"},{"location":"anixApi/profile/#preference","text":"","title":"Preference"},{"location":"anixApi/release/","text":"Anixart Release methods \u041a\u043b\u0430\u0441\u0441 \u0435\u0449\u0451 \u043d\u0435 \u043e\u043f\u0438\u0441\u0430\u043d! \u041e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 Endpoints","title":"Release"},{"location":"anixApi/release/#anixart-release-methods","text":"","title":"Anixart Release methods"},{"location":"anixApi/release/#_1","text":"","title":"\u041a\u043b\u0430\u0441\u0441 \u0435\u0449\u0451 \u043d\u0435 \u043e\u043f\u0438\u0441\u0430\u043d!"},{"location":"anixApi/release/#_2","text":"","title":"\u041e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430"},{"location":"anixApi/release/#endpoints","text":"","title":"Endpoints"},{"location":"home/","text":"Anixart API wrapper \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f pip: pip install -U anixart \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435: from anixart import AnixUserAccount , AnixAPI anix_user = AnixUserAccount ( \"login\" , \"password\" ) anix = AnixAPI ( anix_user ) profile = anix . profile . get () print ( profile [ 'profile' ])","title":"\u0411\u044b\u0441\u0442\u0440\u043e\u0435 \u043d\u0430\u0447\u0430\u043b\u043e"},{"location":"home/#anixart-api-wrapper","text":"","title":"Anixart API wrapper"},{"location":"home/#_1","text":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f pip: pip install -U anixart","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430"},{"location":"home/#_2","text":"from anixart import AnixUserAccount , AnixAPI anix_user = AnixUserAccount ( \"login\" , \"password\" ) anix = AnixAPI ( anix_user ) profile = anix . profile . get () print ( profile [ 'profile' ])","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435:"},{"location":"home/examples/","text":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0412\u0441\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 /examples \u043d\u0430 GitHub. \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0412 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435, \u0438\u0437\u043c\u0435\u043d\u044f\u044f uid \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043f\u0440\u043e\u0444\u0438\u043b\u0435. profile_info.py from anixart import AnixUserAccount , AnixAPI anix_user = AnixUserAccount ( \"login\" , \"password\" ) anix = AnixAPI ( anix_user ) uid = 1 profile = anix . profile . get ( uid )[ 'profile' ] if profile is None : print ( \"Id is incorrect\" ) exit ( 0 ) nick = profile . get ( 'login' , ) uid = profile . get ( 'id' , ) status = profile . get ( 'status' , ) vk = profile . get ( 'vk_page' , ) tg = profile . get ( 'tg_page' , ) inst = profile . get ( 'inst_page' , ) tt = profile . get ( 'tt_page' , ) reg_date = profile . get ( 'register_date' , ) print ( f \" \\n Nick: { nick } \\n \" + f \"Id: { uid } \\n \" + f \"Status: { status } \\n \" + f \"Vk: { vk } \\n \" + f \"Tg: { tg } \\n \" + f \"Inst: { inst } \\n \" + f \"Tt: { tt } \\n \" + f \"Register date: { reg_date } \\n \" ) \u0412\u0440\u0435\u043c\u044f \u0432 \u0441\u0442\u0430\u0442\u0443\u0441\u0435 time_bot.py from anixart import AnixUserAccount , AnixAPI from datetime import datetime import time anix_user = AnixUserAccount ( \"login\" , \"password\" ) anix = AnixAPI ( anix_user ) print ( \" \\n\\n Anixart time bot.\" ) while True : s = \"\u2728 \" + datetime . now () . strftime ( \"%H:%M %d /%m/%Y\" ) anix . profile . edit . status ( s ) print ( f \"Status edit: { s } \" ) time . sleep ( 15 ) \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u043e\u0437\u0432\u0443\u0447\u043a\u0438 voiceovers.py from anixart import AnixUserAccount , AnixAPI anix_user = AnixUserAccount ( \"login\" , \"password\" ) anix = AnixAPI ( anix_user ) v = anix . other . voice () for i in v [ 'types' ]: # vid = voiceover id print ( f \"[vid: { i [ 'id' ] } ] Voiceover: \\\" { i [ 'name' ] } \\\" \" )","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f"},{"location":"home/examples/#_1","text":"\u0412\u0441\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 /examples \u043d\u0430 GitHub.","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b"},{"location":"home/examples/#_2","text":"\u0412 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435, \u0438\u0437\u043c\u0435\u043d\u044f\u044f uid \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u043f\u0440\u043e\u0444\u0438\u043b\u0435. profile_info.py from anixart import AnixUserAccount , AnixAPI anix_user = AnixUserAccount ( \"login\" , \"password\" ) anix = AnixAPI ( anix_user ) uid = 1 profile = anix . profile . get ( uid )[ 'profile' ] if profile is None : print ( \"Id is incorrect\" ) exit ( 0 ) nick = profile . get ( 'login' , ) uid = profile . get ( 'id' , ) status = profile . get ( 'status' , ) vk = profile . get ( 'vk_page' , ) tg = profile . get ( 'tg_page' , ) inst = profile . get ( 'inst_page' , ) tt = profile . get ( 'tt_page' , ) reg_date = profile . get ( 'register_date' , ) print ( f \" \\n Nick: { nick } \\n \" + f \"Id: { uid } \\n \" + f \"Status: { status } \\n \" + f \"Vk: { vk } \\n \" + f \"Tg: { tg } \\n \" + f \"Inst: { inst } \\n \" + f \"Tt: { tt } \\n \" + f \"Register date: { reg_date } \\n \" )","title":"\u0411\u0430\u0437\u043e\u0432\u044b\u0439"},{"location":"home/examples/#_3","text":"time_bot.py from anixart import AnixUserAccount , AnixAPI from datetime import datetime import time anix_user = AnixUserAccount ( \"login\" , \"password\" ) anix = AnixAPI ( anix_user ) print ( \" \\n\\n Anixart time bot.\" ) while True : s = \"\u2728 \" + datetime . now () . strftime ( \"%H:%M %d /%m/%Y\" ) anix . profile . edit . status ( s ) print ( f \"Status edit: { s } \" ) time . sleep ( 15 )","title":"\u0412\u0440\u0435\u043c\u044f \u0432 \u0441\u0442\u0430\u0442\u0443\u0441\u0435"},{"location":"home/examples/#_4","text":"voiceovers.py from anixart import AnixUserAccount , AnixAPI anix_user = AnixUserAccount ( \"login\" , \"password\" ) anix = AnixAPI ( anix_user ) v = anix . other . voice () for i in v [ 'types' ]: # vid = voiceover id print ( f \"[vid: { i [ 'id' ] } ] Voiceover: \\\" { i [ 'name' ] } \\\" \" )","title":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u043e\u0437\u0432\u0443\u0447\u043a\u0438"}]}